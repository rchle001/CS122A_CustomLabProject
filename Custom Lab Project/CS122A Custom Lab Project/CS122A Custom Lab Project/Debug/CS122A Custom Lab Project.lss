
CS122A Custom Lab Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000c50  00000ce4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c50  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001a  00800104  00800104  00000ce8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000ce8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d18  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00000d58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e93  00000000  00000000  00000e18  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008e6  00000000  00000000  00001cab  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009f6  00000000  00000000  00002591  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000300  00000000  00000000  00002f88  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006f9  00000000  00000000  00003288  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000066a  00000000  00000000  00003981  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00003feb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	4f c2       	rjmp	.+1182   	; 0x4d4 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e5       	ldi	r30, 0x50	; 80
  a0:	fc e0       	ldi	r31, 0x0C	; 12
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e0       	ldi	r26, 0x04	; 4
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ae 31       	cpi	r26, 0x1E	; 30
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	ec d4       	rcall	.+2520   	; 0xa9c <main>
  c4:	c3 c5       	rjmp	.+2950   	; 0xc4c <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <ADC_ON>:
	}
	else {
		while ( !(UCSR1A & (1 << RXC1)) );
		return UDR1;
	}
}
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	cd b7       	in	r28, 0x3d	; 61
  ce:	de b7       	in	r29, 0x3e	; 62
  d0:	8c e7       	ldi	r24, 0x7C	; 124
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <muxselect>
  d8:	fc 01       	movw	r30, r24
  da:	20 83       	st	Z, r18
  dc:	8a e7       	ldi	r24, 0x7A	; 122
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	23 ec       	ldi	r18, 0xC3	; 195
  e2:	fc 01       	movw	r30, r24
  e4:	20 83       	st	Z, r18
  e6:	00 00       	nop
  e8:	df 91       	pop	r29
  ea:	cf 91       	pop	r28
  ec:	08 95       	ret

000000ee <ADC_SELECT>:
  ee:	cf 93       	push	r28
  f0:	df 93       	push	r29
  f2:	1f 92       	push	r1
  f4:	cd b7       	in	r28, 0x3d	; 61
  f6:	de b7       	in	r29, 0x3e	; 62
  f8:	89 83       	std	Y+1, r24	; 0x01
  fa:	89 81       	ldd	r24, Y+1	; 0x01
  fc:	88 30       	cpi	r24, 0x08	; 8
  fe:	48 f4       	brcc	.+18     	; 0x112 <ADC_SELECT+0x24>
 100:	89 81       	ldd	r24, Y+1	; 0x01
 102:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <muxselect>
 106:	8c e7       	ldi	r24, 0x7C	; 124
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <muxselect>
 10e:	fc 01       	movw	r30, r24
 110:	20 83       	st	Z, r18
 112:	00 00       	nop
 114:	0f 90       	pop	r0
 116:	df 91       	pop	r29
 118:	cf 91       	pop	r28
 11a:	08 95       	ret

0000011c <ADC_OFF>:
 11c:	cf 93       	push	r28
 11e:	df 93       	push	r29
 120:	cd b7       	in	r28, 0x3d	; 61
 122:	de b7       	in	r29, 0x3e	; 62
 124:	00 00       	nop
 126:	8a e7       	ldi	r24, 0x7A	; 122
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	fc 01       	movw	r30, r24
 12c:	80 81       	ld	r24, Z
 12e:	88 2f       	mov	r24, r24
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	80 71       	andi	r24, 0x10	; 16
 134:	99 27       	eor	r25, r25
 136:	89 2b       	or	r24, r25
 138:	b1 f3       	breq	.-20     	; 0x126 <ADC_OFF+0xa>
 13a:	8a e7       	ldi	r24, 0x7A	; 122
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	2f ef       	ldi	r18, 0xFF	; 255
 140:	fc 01       	movw	r30, r24
 142:	20 83       	st	Z, r18
 144:	00 00       	nop
 146:	df 91       	pop	r29
 148:	cf 91       	pop	r28
 14a:	08 95       	ret

0000014c <ADC_SEND>:
 14c:	cf 93       	push	r28
 14e:	df 93       	push	r29
 150:	cd b7       	in	r28, 0x3d	; 61
 152:	de b7       	in	r29, 0x3e	; 62
 154:	8a e7       	ldi	r24, 0x7A	; 122
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	2a e7       	ldi	r18, 0x7A	; 122
 15a:	30 e0       	ldi	r19, 0x00	; 0
 15c:	f9 01       	movw	r30, r18
 15e:	20 81       	ld	r18, Z
 160:	20 64       	ori	r18, 0x40	; 64
 162:	fc 01       	movw	r30, r24
 164:	20 83       	st	Z, r18
 166:	00 00       	nop
 168:	8a e7       	ldi	r24, 0x7A	; 122
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	fc 01       	movw	r30, r24
 16e:	80 81       	ld	r24, Z
 170:	88 2f       	mov	r24, r24
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	80 71       	andi	r24, 0x10	; 16
 176:	99 27       	eor	r25, r25
 178:	89 2b       	or	r24, r25
 17a:	b1 f3       	breq	.-20     	; 0x168 <ADC_SEND+0x1c>
 17c:	8a e7       	ldi	r24, 0x7A	; 122
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	2a e7       	ldi	r18, 0x7A	; 122
 182:	30 e0       	ldi	r19, 0x00	; 0
 184:	f9 01       	movw	r30, r18
 186:	20 81       	ld	r18, Z
 188:	2f 7b       	andi	r18, 0xBF	; 191
 18a:	fc 01       	movw	r30, r24
 18c:	20 83       	st	Z, r18
 18e:	88 e7       	ldi	r24, 0x78	; 120
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	fc 01       	movw	r30, r24
 194:	80 81       	ld	r24, Z
 196:	91 81       	ldd	r25, Z+1	; 0x01
 198:	96 95       	lsr	r25
 19a:	87 95       	ror	r24
 19c:	96 95       	lsr	r25
 19e:	87 95       	ror	r24
 1a0:	df 91       	pop	r29
 1a2:	cf 91       	pop	r28
 1a4:	08 95       	ret

000001a6 <PRESSENSE_task>:
 1a6:	cf 93       	push	r28
 1a8:	df 93       	push	r29
 1aa:	00 d0       	rcall	.+0      	; 0x1ac <PRESSENSE_task+0x6>
 1ac:	cd b7       	in	r28, 0x3d	; 61
 1ae:	de b7       	in	r29, 0x3e	; 62
 1b0:	9a 83       	std	Y+2, r25	; 0x02
 1b2:	89 83       	std	Y+1, r24	; 0x01
 1b4:	89 81       	ldd	r24, Y+1	; 0x01
 1b6:	9a 81       	ldd	r25, Y+2	; 0x02
 1b8:	81 30       	cpi	r24, 0x01	; 1
 1ba:	91 05       	cpc	r25, r1
 1bc:	81 f0       	breq	.+32     	; 0x1de <PRESSENSE_task+0x38>
 1be:	82 30       	cpi	r24, 0x02	; 2
 1c0:	91 05       	cpc	r25, r1
 1c2:	41 f0       	breq	.+16     	; 0x1d4 <PRESSENSE_task+0x2e>
 1c4:	89 2b       	or	r24, r25
 1c6:	81 f4       	brne	.+32     	; 0x1e8 <PRESSENSE_task+0x42>
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	9a 83       	std	Y+2, r25	; 0x02
 1ce:	89 83       	std	Y+1, r24	; 0x01
 1d0:	7b df       	rcall	.-266    	; 0xc8 <ADC_ON>
 1d2:	0d c0       	rjmp	.+26     	; 0x1ee <PRESSENSE_task+0x48>
 1d4:	82 e0       	ldi	r24, 0x02	; 2
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	9a 83       	std	Y+2, r25	; 0x02
 1da:	89 83       	std	Y+1, r24	; 0x01
 1dc:	08 c0       	rjmp	.+16     	; 0x1ee <PRESSENSE_task+0x48>
 1de:	81 e0       	ldi	r24, 0x01	; 1
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	9a 83       	std	Y+2, r25	; 0x02
 1e4:	89 83       	std	Y+1, r24	; 0x01
 1e6:	03 c0       	rjmp	.+6      	; 0x1ee <PRESSENSE_task+0x48>
 1e8:	1a 82       	std	Y+2, r1	; 0x02
 1ea:	19 82       	std	Y+1, r1	; 0x01
 1ec:	00 00       	nop
 1ee:	89 81       	ldd	r24, Y+1	; 0x01
 1f0:	9a 81       	ldd	r25, Y+2	; 0x02
 1f2:	81 30       	cpi	r24, 0x01	; 1
 1f4:	91 05       	cpc	r25, r1
 1f6:	41 f0       	breq	.+16     	; 0x208 <PRESSENSE_task+0x62>
 1f8:	82 30       	cpi	r24, 0x02	; 2
 1fa:	91 05       	cpc	r25, r1
 1fc:	19 f0       	breq	.+6      	; 0x204 <PRESSENSE_task+0x5e>
 1fe:	89 2b       	or	r24, r25
 200:	79 f0       	breq	.+30     	; 0x220 <PRESSENSE_task+0x7a>
 202:	0f c0       	rjmp	.+30     	; 0x222 <PRESSENSE_task+0x7c>
 204:	8b df       	rcall	.-234    	; 0x11c <ADC_OFF>
 206:	0d c0       	rjmp	.+26     	; 0x222 <PRESSENSE_task+0x7c>
 208:	80 e0       	ldi	r24, 0x00	; 0
 20a:	71 df       	rcall	.-286    	; 0xee <ADC_SELECT>
 20c:	9f df       	rcall	.-194    	; 0x14c <ADC_SEND>
 20e:	82 95       	swap	r24
 210:	8f 70       	andi	r24, 0x0F	; 15
 212:	9f e0       	ldi	r25, 0x0F	; 15
 214:	29 2f       	mov	r18, r25
 216:	28 1b       	sub	r18, r24
 218:	82 2f       	mov	r24, r18
 21a:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 21e:	01 c0       	rjmp	.+2      	; 0x222 <PRESSENSE_task+0x7c>
 220:	00 00       	nop
 222:	89 81       	ldd	r24, Y+1	; 0x01
 224:	9a 81       	ldd	r25, Y+2	; 0x02
 226:	0f 90       	pop	r0
 228:	0f 90       	pop	r0
 22a:	df 91       	pop	r29
 22c:	cf 91       	pop	r28
 22e:	08 95       	ret

00000230 <magSense_task>:
 230:	cf 93       	push	r28
 232:	df 93       	push	r29
 234:	00 d0       	rcall	.+0      	; 0x236 <magSense_task+0x6>
 236:	cd b7       	in	r28, 0x3d	; 61
 238:	de b7       	in	r29, 0x3e	; 62
 23a:	9a 83       	std	Y+2, r25	; 0x02
 23c:	89 83       	std	Y+1, r24	; 0x01
 23e:	89 81       	ldd	r24, Y+1	; 0x01
 240:	9a 81       	ldd	r25, Y+2	; 0x02
 242:	81 30       	cpi	r24, 0x01	; 1
 244:	91 05       	cpc	r25, r1
 246:	61 f0       	breq	.+24     	; 0x260 <magSense_task+0x30>
 248:	82 30       	cpi	r24, 0x02	; 2
 24a:	91 05       	cpc	r25, r1
 24c:	09 f4       	brne	.+2      	; 0x250 <magSense_task+0x20>
 24e:	49 c0       	rjmp	.+146    	; 0x2e2 <magSense_task+0xb2>
 250:	89 2b       	or	r24, r25
 252:	09 f0       	breq	.+2      	; 0x256 <magSense_task+0x26>
 254:	4b c0       	rjmp	.+150    	; 0x2ec <magSense_task+0xbc>
 256:	81 e0       	ldi	r24, 0x01	; 1
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	9a 83       	std	Y+2, r25	; 0x02
 25c:	89 83       	std	Y+1, r24	; 0x01
 25e:	49 c0       	rjmp	.+146    	; 0x2f2 <magSense_task+0xc2>
 260:	81 e0       	ldi	r24, 0x01	; 1
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	9a 83       	std	Y+2, r25	; 0x02
 266:	89 83       	std	Y+1, r24	; 0x01
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	41 df       	rcall	.-382    	; 0xee <ADC_SELECT>
 26c:	6f df       	rcall	.-290    	; 0x14c <ADC_SEND>
 26e:	82 95       	swap	r24
 270:	8f 70       	andi	r24, 0x0F	; 15
 272:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <magTL>
 276:	82 e0       	ldi	r24, 0x02	; 2
 278:	3a df       	rcall	.-396    	; 0xee <ADC_SELECT>
 27a:	68 df       	rcall	.-304    	; 0x14c <ADC_SEND>
 27c:	82 95       	swap	r24
 27e:	8f 70       	andi	r24, 0x0F	; 15
 280:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <magBL>
 284:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <magBL>
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	97 30       	cpi	r25, 0x07	; 7
 28c:	08 f0       	brcs	.+2      	; 0x290 <magSense_task+0x60>
 28e:	80 e0       	ldi	r24, 0x00	; 0
 290:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <up>
 294:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <magTL>
 298:	81 e0       	ldi	r24, 0x01	; 1
 29a:	97 30       	cpi	r25, 0x07	; 7
 29c:	08 f0       	brcs	.+2      	; 0x2a0 <magSense_task+0x70>
 29e:	80 e0       	ldi	r24, 0x00	; 0
 2a0:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <down>
 2a4:	80 e2       	ldi	r24, 0x20	; 32
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	fc 01       	movw	r30, r24
 2aa:	80 81       	ld	r24, Z
 2ac:	88 2f       	mov	r24, r24
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	80 71       	andi	r24, 0x10	; 16
 2b2:	99 27       	eor	r25, r25
 2b4:	21 e0       	ldi	r18, 0x01	; 1
 2b6:	89 2b       	or	r24, r25
 2b8:	09 f4       	brne	.+2      	; 0x2bc <magSense_task+0x8c>
 2ba:	20 e0       	ldi	r18, 0x00	; 0
 2bc:	82 2f       	mov	r24, r18
 2be:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <left>
 2c2:	80 e2       	ldi	r24, 0x20	; 32
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	fc 01       	movw	r30, r24
 2c8:	80 81       	ld	r24, Z
 2ca:	88 2f       	mov	r24, r24
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	88 70       	andi	r24, 0x08	; 8
 2d0:	99 27       	eor	r25, r25
 2d2:	21 e0       	ldi	r18, 0x01	; 1
 2d4:	89 2b       	or	r24, r25
 2d6:	09 f4       	brne	.+2      	; 0x2da <magSense_task+0xaa>
 2d8:	20 e0       	ldi	r18, 0x00	; 0
 2da:	82 2f       	mov	r24, r18
 2dc:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <right>
 2e0:	08 c0       	rjmp	.+16     	; 0x2f2 <magSense_task+0xc2>
 2e2:	82 e0       	ldi	r24, 0x02	; 2
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	9a 83       	std	Y+2, r25	; 0x02
 2e8:	89 83       	std	Y+1, r24	; 0x01
 2ea:	03 c0       	rjmp	.+6      	; 0x2f2 <magSense_task+0xc2>
 2ec:	1a 82       	std	Y+2, r1	; 0x02
 2ee:	19 82       	std	Y+1, r1	; 0x01
 2f0:	00 00       	nop
 2f2:	89 81       	ldd	r24, Y+1	; 0x01
 2f4:	9a 81       	ldd	r25, Y+2	; 0x02
 2f6:	81 30       	cpi	r24, 0x01	; 1
 2f8:	91 05       	cpc	r25, r1
 2fa:	71 f0       	breq	.+28     	; 0x318 <magSense_task+0xe8>
 2fc:	82 30       	cpi	r24, 0x02	; 2
 2fe:	91 05       	cpc	r25, r1
 300:	19 f0       	breq	.+6      	; 0x308 <magSense_task+0xd8>
 302:	89 2b       	or	r24, r25
 304:	59 f0       	breq	.+22     	; 0x31c <magSense_task+0xec>
 306:	05 c0       	rjmp	.+10     	; 0x312 <magSense_task+0xe2>
 308:	82 e0       	ldi	r24, 0x02	; 2
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	9a 83       	std	Y+2, r25	; 0x02
 30e:	89 83       	std	Y+1, r24	; 0x01
 310:	06 c0       	rjmp	.+12     	; 0x31e <magSense_task+0xee>
 312:	1a 82       	std	Y+2, r1	; 0x02
 314:	19 82       	std	Y+1, r1	; 0x01
 316:	03 c0       	rjmp	.+6      	; 0x31e <magSense_task+0xee>
 318:	00 00       	nop
 31a:	01 c0       	rjmp	.+2      	; 0x31e <magSense_task+0xee>
 31c:	00 00       	nop
 31e:	89 81       	ldd	r24, Y+1	; 0x01
 320:	9a 81       	ldd	r25, Y+2	; 0x02
 322:	0f 90       	pop	r0
 324:	0f 90       	pop	r0
 326:	df 91       	pop	r29
 328:	cf 91       	pop	r28
 32a:	08 95       	ret

0000032c <TimerISR>:
 32c:	0f 93       	push	r16
 32e:	1f 93       	push	r17
 330:	cf 93       	push	r28
 332:	df 93       	push	r29
 334:	cd b7       	in	r28, 0x3d	; 61
 336:	de b7       	in	r29, 0x3e	; 62
 338:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <i.1678>
 33c:	be c0       	rjmp	.+380    	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 33e:	20 91 17 01 	lds	r18, 0x0117	; 0x800117 <tasks>
 342:	30 91 18 01 	lds	r19, 0x0118	; 0x800118 <tasks+0x1>
 346:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <i.1678>
 34a:	48 2f       	mov	r20, r24
 34c:	50 e0       	ldi	r21, 0x00	; 0
 34e:	6b e0       	ldi	r22, 0x0B	; 11
 350:	64 9f       	mul	r22, r20
 352:	c0 01       	movw	r24, r0
 354:	65 9f       	mul	r22, r21
 356:	90 0d       	add	r25, r0
 358:	11 24       	eor	r1, r1
 35a:	82 0f       	add	r24, r18
 35c:	93 1f       	adc	r25, r19
 35e:	fc 01       	movw	r30, r24
 360:	25 81       	ldd	r18, Z+5	; 0x05
 362:	36 81       	ldd	r19, Z+6	; 0x06
 364:	47 81       	ldd	r20, Z+7	; 0x07
 366:	50 85       	ldd	r21, Z+8	; 0x08
 368:	60 91 17 01 	lds	r22, 0x0117	; 0x800117 <tasks>
 36c:	70 91 18 01 	lds	r23, 0x0118	; 0x800118 <tasks+0x1>
 370:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <i.1678>
 374:	e8 2f       	mov	r30, r24
 376:	f0 e0       	ldi	r31, 0x00	; 0
 378:	ab e0       	ldi	r26, 0x0B	; 11
 37a:	ae 9f       	mul	r26, r30
 37c:	c0 01       	movw	r24, r0
 37e:	af 9f       	mul	r26, r31
 380:	90 0d       	add	r25, r0
 382:	11 24       	eor	r1, r1
 384:	86 0f       	add	r24, r22
 386:	97 1f       	adc	r25, r23
 388:	fc 01       	movw	r30, r24
 38a:	81 81       	ldd	r24, Z+1	; 0x01
 38c:	92 81       	ldd	r25, Z+2	; 0x02
 38e:	a3 81       	ldd	r26, Z+3	; 0x03
 390:	b4 81       	ldd	r27, Z+4	; 0x04
 392:	28 17       	cp	r18, r24
 394:	39 07       	cpc	r19, r25
 396:	4a 07       	cpc	r20, r26
 398:	5b 07       	cpc	r21, r27
 39a:	08 f4       	brcc	.+2      	; 0x39e <TimerISR+0x72>
 39c:	52 c0       	rjmp	.+164    	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 39e:	20 91 17 01 	lds	r18, 0x0117	; 0x800117 <tasks>
 3a2:	30 91 18 01 	lds	r19, 0x0118	; 0x800118 <tasks+0x1>
 3a6:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <i.1678>
 3aa:	48 2f       	mov	r20, r24
 3ac:	50 e0       	ldi	r21, 0x00	; 0
 3ae:	6b e0       	ldi	r22, 0x0B	; 11
 3b0:	64 9f       	mul	r22, r20
 3b2:	c0 01       	movw	r24, r0
 3b4:	65 9f       	mul	r22, r21
 3b6:	90 0d       	add	r25, r0
 3b8:	11 24       	eor	r1, r1
 3ba:	89 01       	movw	r16, r18
 3bc:	08 0f       	add	r16, r24
 3be:	19 1f       	adc	r17, r25
 3c0:	20 91 17 01 	lds	r18, 0x0117	; 0x800117 <tasks>
 3c4:	30 91 18 01 	lds	r19, 0x0118	; 0x800118 <tasks+0x1>
 3c8:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <i.1678>
 3cc:	48 2f       	mov	r20, r24
 3ce:	50 e0       	ldi	r21, 0x00	; 0
 3d0:	6b e0       	ldi	r22, 0x0B	; 11
 3d2:	64 9f       	mul	r22, r20
 3d4:	c0 01       	movw	r24, r0
 3d6:	65 9f       	mul	r22, r21
 3d8:	90 0d       	add	r25, r0
 3da:	11 24       	eor	r1, r1
 3dc:	82 0f       	add	r24, r18
 3de:	93 1f       	adc	r25, r19
 3e0:	fc 01       	movw	r30, r24
 3e2:	21 85       	ldd	r18, Z+9	; 0x09
 3e4:	32 85       	ldd	r19, Z+10	; 0x0a
 3e6:	40 91 17 01 	lds	r20, 0x0117	; 0x800117 <tasks>
 3ea:	50 91 18 01 	lds	r21, 0x0118	; 0x800118 <tasks+0x1>
 3ee:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <i.1678>
 3f2:	68 2f       	mov	r22, r24
 3f4:	70 e0       	ldi	r23, 0x00	; 0
 3f6:	eb e0       	ldi	r30, 0x0B	; 11
 3f8:	e6 9f       	mul	r30, r22
 3fa:	c0 01       	movw	r24, r0
 3fc:	e7 9f       	mul	r30, r23
 3fe:	90 0d       	add	r25, r0
 400:	11 24       	eor	r1, r1
 402:	84 0f       	add	r24, r20
 404:	95 1f       	adc	r25, r21
 406:	fc 01       	movw	r30, r24
 408:	80 81       	ld	r24, Z
 40a:	08 2e       	mov	r0, r24
 40c:	00 0c       	add	r0, r0
 40e:	99 0b       	sbc	r25, r25
 410:	f9 01       	movw	r30, r18
 412:	09 95       	icall
 414:	f8 01       	movw	r30, r16
 416:	80 83       	st	Z, r24
 418:	20 91 17 01 	lds	r18, 0x0117	; 0x800117 <tasks>
 41c:	30 91 18 01 	lds	r19, 0x0118	; 0x800118 <tasks+0x1>
 420:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <i.1678>
 424:	48 2f       	mov	r20, r24
 426:	50 e0       	ldi	r21, 0x00	; 0
 428:	6b e0       	ldi	r22, 0x0B	; 11
 42a:	64 9f       	mul	r22, r20
 42c:	c0 01       	movw	r24, r0
 42e:	65 9f       	mul	r22, r21
 430:	90 0d       	add	r25, r0
 432:	11 24       	eor	r1, r1
 434:	82 0f       	add	r24, r18
 436:	93 1f       	adc	r25, r19
 438:	fc 01       	movw	r30, r24
 43a:	15 82       	std	Z+5, r1	; 0x05
 43c:	16 82       	std	Z+6, r1	; 0x06
 43e:	17 82       	std	Z+7, r1	; 0x07
 440:	10 86       	std	Z+8, r1	; 0x08
 442:	20 91 17 01 	lds	r18, 0x0117	; 0x800117 <tasks>
 446:	30 91 18 01 	lds	r19, 0x0118	; 0x800118 <tasks+0x1>
 44a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <i.1678>
 44e:	48 2f       	mov	r20, r24
 450:	50 e0       	ldi	r21, 0x00	; 0
 452:	6b e0       	ldi	r22, 0x0B	; 11
 454:	64 9f       	mul	r22, r20
 456:	c0 01       	movw	r24, r0
 458:	65 9f       	mul	r22, r21
 45a:	90 0d       	add	r25, r0
 45c:	11 24       	eor	r1, r1
 45e:	b9 01       	movw	r22, r18
 460:	68 0f       	add	r22, r24
 462:	79 1f       	adc	r23, r25
 464:	20 91 17 01 	lds	r18, 0x0117	; 0x800117 <tasks>
 468:	30 91 18 01 	lds	r19, 0x0118	; 0x800118 <tasks+0x1>
 46c:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <i.1678>
 470:	48 2f       	mov	r20, r24
 472:	50 e0       	ldi	r21, 0x00	; 0
 474:	eb e0       	ldi	r30, 0x0B	; 11
 476:	e4 9f       	mul	r30, r20
 478:	c0 01       	movw	r24, r0
 47a:	e5 9f       	mul	r30, r21
 47c:	90 0d       	add	r25, r0
 47e:	11 24       	eor	r1, r1
 480:	82 0f       	add	r24, r18
 482:	93 1f       	adc	r25, r19
 484:	fc 01       	movw	r30, r24
 486:	25 81       	ldd	r18, Z+5	; 0x05
 488:	36 81       	ldd	r19, Z+6	; 0x06
 48a:	47 81       	ldd	r20, Z+7	; 0x07
 48c:	50 85       	ldd	r21, Z+8	; 0x08
 48e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 492:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 496:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 49a:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 49e:	82 0f       	add	r24, r18
 4a0:	93 1f       	adc	r25, r19
 4a2:	a4 1f       	adc	r26, r20
 4a4:	b5 1f       	adc	r27, r21
 4a6:	fb 01       	movw	r30, r22
 4a8:	85 83       	std	Z+5, r24	; 0x05
 4aa:	96 83       	std	Z+6, r25	; 0x06
 4ac:	a7 83       	std	Z+7, r26	; 0x07
 4ae:	b0 87       	std	Z+8, r27	; 0x08
 4b0:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <i.1678>
 4b4:	8f 5f       	subi	r24, 0xFF	; 255
 4b6:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <i.1678>
 4ba:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <i.1678>
 4be:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <tasksNum>
 4c2:	98 17       	cp	r25, r24
 4c4:	08 f4       	brcc	.+2      	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4c6:	3b cf       	rjmp	.-394    	; 0x33e <TimerISR+0x12>
 4c8:	00 00       	nop
 4ca:	df 91       	pop	r29
 4cc:	cf 91       	pop	r28
 4ce:	1f 91       	pop	r17
 4d0:	0f 91       	pop	r16
 4d2:	08 95       	ret

000004d4 <__vector_13>:
 4d4:	1f 92       	push	r1
 4d6:	0f 92       	push	r0
 4d8:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 4dc:	0f 92       	push	r0
 4de:	11 24       	eor	r1, r1
 4e0:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
 4e4:	0f 92       	push	r0
 4e6:	2f 93       	push	r18
 4e8:	3f 93       	push	r19
 4ea:	4f 93       	push	r20
 4ec:	5f 93       	push	r21
 4ee:	6f 93       	push	r22
 4f0:	7f 93       	push	r23
 4f2:	8f 93       	push	r24
 4f4:	9f 93       	push	r25
 4f6:	af 93       	push	r26
 4f8:	bf 93       	push	r27
 4fa:	ef 93       	push	r30
 4fc:	ff 93       	push	r31
 4fe:	cf 93       	push	r28
 500:	df 93       	push	r29
 502:	cd b7       	in	r28, 0x3d	; 61
 504:	de b7       	in	r29, 0x3e	; 62
 506:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <tasksPeriodCntDown>
 50a:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <tasksPeriodCntDown+0x1>
 50e:	a0 91 10 01 	lds	r26, 0x0110	; 0x800110 <tasksPeriodCntDown+0x2>
 512:	b0 91 11 01 	lds	r27, 0x0111	; 0x800111 <tasksPeriodCntDown+0x3>
 516:	01 97       	sbiw	r24, 0x01	; 1
 518:	a1 09       	sbc	r26, r1
 51a:	b1 09       	sbc	r27, r1
 51c:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <tasksPeriodCntDown>
 520:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <tasksPeriodCntDown+0x1>
 524:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <tasksPeriodCntDown+0x2>
 528:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <tasksPeriodCntDown+0x3>
 52c:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <tasksPeriodCntDown>
 530:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <tasksPeriodCntDown+0x1>
 534:	a0 91 10 01 	lds	r26, 0x0110	; 0x800110 <tasksPeriodCntDown+0x2>
 538:	b0 91 11 01 	lds	r27, 0x0111	; 0x800111 <tasksPeriodCntDown+0x3>
 53c:	89 2b       	or	r24, r25
 53e:	8a 2b       	or	r24, r26
 540:	8b 2b       	or	r24, r27
 542:	89 f4       	brne	.+34     	; 0x566 <__vector_13+0x92>
 544:	f3 de       	rcall	.-538    	; 0x32c <TimerISR>
 546:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 54a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 54e:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 552:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 556:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <tasksPeriodCntDown>
 55a:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <tasksPeriodCntDown+0x1>
 55e:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <tasksPeriodCntDown+0x2>
 562:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <tasksPeriodCntDown+0x3>
 566:	00 00       	nop
 568:	df 91       	pop	r29
 56a:	cf 91       	pop	r28
 56c:	ff 91       	pop	r31
 56e:	ef 91       	pop	r30
 570:	bf 91       	pop	r27
 572:	af 91       	pop	r26
 574:	9f 91       	pop	r25
 576:	8f 91       	pop	r24
 578:	7f 91       	pop	r23
 57a:	6f 91       	pop	r22
 57c:	5f 91       	pop	r21
 57e:	4f 91       	pop	r20
 580:	3f 91       	pop	r19
 582:	2f 91       	pop	r18
 584:	0f 90       	pop	r0
 586:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
 58a:	0f 90       	pop	r0
 58c:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 590:	0f 90       	pop	r0
 592:	1f 90       	pop	r1
 594:	18 95       	reti

00000596 <TimerSet>:
 596:	cf 93       	push	r28
 598:	df 93       	push	r29
 59a:	00 d0       	rcall	.+0      	; 0x59c <TimerSet+0x6>
 59c:	00 d0       	rcall	.+0      	; 0x59e <TimerSet+0x8>
 59e:	cd b7       	in	r28, 0x3d	; 61
 5a0:	de b7       	in	r29, 0x3e	; 62
 5a2:	69 83       	std	Y+1, r22	; 0x01
 5a4:	7a 83       	std	Y+2, r23	; 0x02
 5a6:	8b 83       	std	Y+3, r24	; 0x03
 5a8:	9c 83       	std	Y+4, r25	; 0x04
 5aa:	89 81       	ldd	r24, Y+1	; 0x01
 5ac:	9a 81       	ldd	r25, Y+2	; 0x02
 5ae:	ab 81       	ldd	r26, Y+3	; 0x03
 5b0:	bc 81       	ldd	r27, Y+4	; 0x04
 5b2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 5b6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 5ba:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 5be:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 5c2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 5c6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 5ca:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 5ce:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 5d2:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <tasksPeriodCntDown>
 5d6:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <tasksPeriodCntDown+0x1>
 5da:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <tasksPeriodCntDown+0x2>
 5de:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <tasksPeriodCntDown+0x3>
 5e2:	00 00       	nop
 5e4:	0f 90       	pop	r0
 5e6:	0f 90       	pop	r0
 5e8:	0f 90       	pop	r0
 5ea:	0f 90       	pop	r0
 5ec:	df 91       	pop	r29
 5ee:	cf 91       	pop	r28
 5f0:	08 95       	ret

000005f2 <TimerOn>:
 5f2:	cf 93       	push	r28
 5f4:	df 93       	push	r29
 5f6:	cd b7       	in	r28, 0x3d	; 61
 5f8:	de b7       	in	r29, 0x3e	; 62
 5fa:	81 e8       	ldi	r24, 0x81	; 129
 5fc:	90 e0       	ldi	r25, 0x00	; 0
 5fe:	2b e0       	ldi	r18, 0x0B	; 11
 600:	fc 01       	movw	r30, r24
 602:	20 83       	st	Z, r18
 604:	88 e8       	ldi	r24, 0x88	; 136
 606:	90 e0       	ldi	r25, 0x00	; 0
 608:	2d e7       	ldi	r18, 0x7D	; 125
 60a:	30 e0       	ldi	r19, 0x00	; 0
 60c:	fc 01       	movw	r30, r24
 60e:	31 83       	std	Z+1, r19	; 0x01
 610:	20 83       	st	Z, r18
 612:	8f e6       	ldi	r24, 0x6F	; 111
 614:	90 e0       	ldi	r25, 0x00	; 0
 616:	22 e0       	ldi	r18, 0x02	; 2
 618:	fc 01       	movw	r30, r24
 61a:	20 83       	st	Z, r18
 61c:	84 e8       	ldi	r24, 0x84	; 132
 61e:	90 e0       	ldi	r25, 0x00	; 0
 620:	fc 01       	movw	r30, r24
 622:	11 82       	std	Z+1, r1	; 0x01
 624:	10 82       	st	Z, r1
 626:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 62a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 62e:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 632:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 636:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <tasksPeriodCntDown>
 63a:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <tasksPeriodCntDown+0x1>
 63e:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <tasksPeriodCntDown+0x2>
 642:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <tasksPeriodCntDown+0x3>
 646:	8f e5       	ldi	r24, 0x5F	; 95
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	2f e5       	ldi	r18, 0x5F	; 95
 64c:	30 e0       	ldi	r19, 0x00	; 0
 64e:	f9 01       	movw	r30, r18
 650:	20 81       	ld	r18, Z
 652:	20 68       	ori	r18, 0x80	; 128
 654:	fc 01       	movw	r30, r24
 656:	20 83       	st	Z, r18
 658:	00 00       	nop
 65a:	df 91       	pop	r29
 65c:	cf 91       	pop	r28
 65e:	08 95       	ret

00000660 <B1_task>:
 660:	cf 93       	push	r28
 662:	df 93       	push	r29
 664:	00 d0       	rcall	.+0      	; 0x666 <B1_task+0x6>
 666:	cd b7       	in	r28, 0x3d	; 61
 668:	de b7       	in	r29, 0x3e	; 62
 66a:	9a 83       	std	Y+2, r25	; 0x02
 66c:	89 83       	std	Y+1, r24	; 0x01
 66e:	89 81       	ldd	r24, Y+1	; 0x01
 670:	9a 81       	ldd	r25, Y+2	; 0x02
 672:	81 30       	cpi	r24, 0x01	; 1
 674:	91 05       	cpc	r25, r1
 676:	51 f0       	breq	.+20     	; 0x68c <B1_task+0x2c>
 678:	82 30       	cpi	r24, 0x02	; 2
 67a:	91 05       	cpc	r25, r1
 67c:	d9 f0       	breq	.+54     	; 0x6b4 <B1_task+0x54>
 67e:	89 2b       	or	r24, r25
 680:	69 f5       	brne	.+90     	; 0x6dc <B1_task+0x7c>
 682:	81 e0       	ldi	r24, 0x01	; 1
 684:	90 e0       	ldi	r25, 0x00	; 0
 686:	9a 83       	std	Y+2, r25	; 0x02
 688:	89 83       	std	Y+1, r24	; 0x01
 68a:	2b c0       	rjmp	.+86     	; 0x6e2 <B1_task+0x82>
 68c:	86 e2       	ldi	r24, 0x26	; 38
 68e:	90 e0       	ldi	r25, 0x00	; 0
 690:	fc 01       	movw	r30, r24
 692:	80 81       	ld	r24, Z
 694:	88 2f       	mov	r24, r24
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	81 70       	andi	r24, 0x01	; 1
 69a:	99 27       	eor	r25, r25
 69c:	89 2b       	or	r24, r25
 69e:	29 f4       	brne	.+10     	; 0x6aa <B1_task+0x4a>
 6a0:	82 e0       	ldi	r24, 0x02	; 2
 6a2:	90 e0       	ldi	r25, 0x00	; 0
 6a4:	9a 83       	std	Y+2, r25	; 0x02
 6a6:	89 83       	std	Y+1, r24	; 0x01
 6a8:	1c c0       	rjmp	.+56     	; 0x6e2 <B1_task+0x82>
 6aa:	81 e0       	ldi	r24, 0x01	; 1
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	9a 83       	std	Y+2, r25	; 0x02
 6b0:	89 83       	std	Y+1, r24	; 0x01
 6b2:	17 c0       	rjmp	.+46     	; 0x6e2 <B1_task+0x82>
 6b4:	86 e2       	ldi	r24, 0x26	; 38
 6b6:	90 e0       	ldi	r25, 0x00	; 0
 6b8:	fc 01       	movw	r30, r24
 6ba:	80 81       	ld	r24, Z
 6bc:	88 2f       	mov	r24, r24
 6be:	90 e0       	ldi	r25, 0x00	; 0
 6c0:	81 70       	andi	r24, 0x01	; 1
 6c2:	99 27       	eor	r25, r25
 6c4:	89 2b       	or	r24, r25
 6c6:	29 f0       	breq	.+10     	; 0x6d2 <B1_task+0x72>
 6c8:	81 e0       	ldi	r24, 0x01	; 1
 6ca:	90 e0       	ldi	r25, 0x00	; 0
 6cc:	9a 83       	std	Y+2, r25	; 0x02
 6ce:	89 83       	std	Y+1, r24	; 0x01
 6d0:	08 c0       	rjmp	.+16     	; 0x6e2 <B1_task+0x82>
 6d2:	82 e0       	ldi	r24, 0x02	; 2
 6d4:	90 e0       	ldi	r25, 0x00	; 0
 6d6:	9a 83       	std	Y+2, r25	; 0x02
 6d8:	89 83       	std	Y+1, r24	; 0x01
 6da:	03 c0       	rjmp	.+6      	; 0x6e2 <B1_task+0x82>
 6dc:	1a 82       	std	Y+2, r1	; 0x02
 6de:	19 82       	std	Y+1, r1	; 0x01
 6e0:	00 00       	nop
 6e2:	89 81       	ldd	r24, Y+1	; 0x01
 6e4:	9a 81       	ldd	r25, Y+2	; 0x02
 6e6:	81 30       	cpi	r24, 0x01	; 1
 6e8:	91 05       	cpc	r25, r1
 6ea:	31 f0       	breq	.+12     	; 0x6f8 <B1_task+0x98>
 6ec:	82 30       	cpi	r24, 0x02	; 2
 6ee:	91 05       	cpc	r25, r1
 6f0:	49 f0       	breq	.+18     	; 0x704 <B1_task+0xa4>
 6f2:	89 2b       	or	r24, r25
 6f4:	69 f0       	breq	.+26     	; 0x710 <B1_task+0xb0>
 6f6:	0d c0       	rjmp	.+26     	; 0x712 <B1_task+0xb2>
 6f8:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <buttons>
 6fc:	8e 7f       	andi	r24, 0xFE	; 254
 6fe:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <buttons>
 702:	07 c0       	rjmp	.+14     	; 0x712 <B1_task+0xb2>
 704:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <buttons>
 708:	81 60       	ori	r24, 0x01	; 1
 70a:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <buttons>
 70e:	01 c0       	rjmp	.+2      	; 0x712 <B1_task+0xb2>
 710:	00 00       	nop
 712:	89 81       	ldd	r24, Y+1	; 0x01
 714:	9a 81       	ldd	r25, Y+2	; 0x02
 716:	0f 90       	pop	r0
 718:	0f 90       	pop	r0
 71a:	df 91       	pop	r29
 71c:	cf 91       	pop	r28
 71e:	08 95       	ret

00000720 <B2_task>:
 720:	cf 93       	push	r28
 722:	df 93       	push	r29
 724:	00 d0       	rcall	.+0      	; 0x726 <B2_task+0x6>
 726:	cd b7       	in	r28, 0x3d	; 61
 728:	de b7       	in	r29, 0x3e	; 62
 72a:	9a 83       	std	Y+2, r25	; 0x02
 72c:	89 83       	std	Y+1, r24	; 0x01
 72e:	89 81       	ldd	r24, Y+1	; 0x01
 730:	9a 81       	ldd	r25, Y+2	; 0x02
 732:	81 30       	cpi	r24, 0x01	; 1
 734:	91 05       	cpc	r25, r1
 736:	51 f0       	breq	.+20     	; 0x74c <B2_task+0x2c>
 738:	82 30       	cpi	r24, 0x02	; 2
 73a:	91 05       	cpc	r25, r1
 73c:	d9 f0       	breq	.+54     	; 0x774 <B2_task+0x54>
 73e:	89 2b       	or	r24, r25
 740:	69 f5       	brne	.+90     	; 0x79c <B2_task+0x7c>
 742:	81 e0       	ldi	r24, 0x01	; 1
 744:	90 e0       	ldi	r25, 0x00	; 0
 746:	9a 83       	std	Y+2, r25	; 0x02
 748:	89 83       	std	Y+1, r24	; 0x01
 74a:	2b c0       	rjmp	.+86     	; 0x7a2 <B2_task+0x82>
 74c:	86 e2       	ldi	r24, 0x26	; 38
 74e:	90 e0       	ldi	r25, 0x00	; 0
 750:	fc 01       	movw	r30, r24
 752:	80 81       	ld	r24, Z
 754:	88 2f       	mov	r24, r24
 756:	90 e0       	ldi	r25, 0x00	; 0
 758:	82 70       	andi	r24, 0x02	; 2
 75a:	99 27       	eor	r25, r25
 75c:	89 2b       	or	r24, r25
 75e:	29 f4       	brne	.+10     	; 0x76a <B2_task+0x4a>
 760:	82 e0       	ldi	r24, 0x02	; 2
 762:	90 e0       	ldi	r25, 0x00	; 0
 764:	9a 83       	std	Y+2, r25	; 0x02
 766:	89 83       	std	Y+1, r24	; 0x01
 768:	1c c0       	rjmp	.+56     	; 0x7a2 <B2_task+0x82>
 76a:	81 e0       	ldi	r24, 0x01	; 1
 76c:	90 e0       	ldi	r25, 0x00	; 0
 76e:	9a 83       	std	Y+2, r25	; 0x02
 770:	89 83       	std	Y+1, r24	; 0x01
 772:	17 c0       	rjmp	.+46     	; 0x7a2 <B2_task+0x82>
 774:	86 e2       	ldi	r24, 0x26	; 38
 776:	90 e0       	ldi	r25, 0x00	; 0
 778:	fc 01       	movw	r30, r24
 77a:	80 81       	ld	r24, Z
 77c:	88 2f       	mov	r24, r24
 77e:	90 e0       	ldi	r25, 0x00	; 0
 780:	82 70       	andi	r24, 0x02	; 2
 782:	99 27       	eor	r25, r25
 784:	89 2b       	or	r24, r25
 786:	29 f0       	breq	.+10     	; 0x792 <B2_task+0x72>
 788:	81 e0       	ldi	r24, 0x01	; 1
 78a:	90 e0       	ldi	r25, 0x00	; 0
 78c:	9a 83       	std	Y+2, r25	; 0x02
 78e:	89 83       	std	Y+1, r24	; 0x01
 790:	08 c0       	rjmp	.+16     	; 0x7a2 <B2_task+0x82>
 792:	82 e0       	ldi	r24, 0x02	; 2
 794:	90 e0       	ldi	r25, 0x00	; 0
 796:	9a 83       	std	Y+2, r25	; 0x02
 798:	89 83       	std	Y+1, r24	; 0x01
 79a:	03 c0       	rjmp	.+6      	; 0x7a2 <B2_task+0x82>
 79c:	1a 82       	std	Y+2, r1	; 0x02
 79e:	19 82       	std	Y+1, r1	; 0x01
 7a0:	00 00       	nop
 7a2:	89 81       	ldd	r24, Y+1	; 0x01
 7a4:	9a 81       	ldd	r25, Y+2	; 0x02
 7a6:	81 30       	cpi	r24, 0x01	; 1
 7a8:	91 05       	cpc	r25, r1
 7aa:	31 f0       	breq	.+12     	; 0x7b8 <B2_task+0x98>
 7ac:	82 30       	cpi	r24, 0x02	; 2
 7ae:	91 05       	cpc	r25, r1
 7b0:	49 f0       	breq	.+18     	; 0x7c4 <B2_task+0xa4>
 7b2:	89 2b       	or	r24, r25
 7b4:	69 f0       	breq	.+26     	; 0x7d0 <B2_task+0xb0>
 7b6:	0d c0       	rjmp	.+26     	; 0x7d2 <B2_task+0xb2>
 7b8:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <buttons>
 7bc:	8d 7f       	andi	r24, 0xFD	; 253
 7be:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <buttons>
 7c2:	07 c0       	rjmp	.+14     	; 0x7d2 <B2_task+0xb2>
 7c4:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <buttons>
 7c8:	82 60       	ori	r24, 0x02	; 2
 7ca:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <buttons>
 7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <B2_task+0xb2>
 7d0:	00 00       	nop
 7d2:	89 81       	ldd	r24, Y+1	; 0x01
 7d4:	9a 81       	ldd	r25, Y+2	; 0x02
 7d6:	0f 90       	pop	r0
 7d8:	0f 90       	pop	r0
 7da:	df 91       	pop	r29
 7dc:	cf 91       	pop	r28
 7de:	08 95       	ret

000007e0 <initUSART>:
 7e0:	cf 93       	push	r28
 7e2:	df 93       	push	r29
 7e4:	1f 92       	push	r1
 7e6:	cd b7       	in	r28, 0x3d	; 61
 7e8:	de b7       	in	r29, 0x3e	; 62
 7ea:	89 83       	std	Y+1, r24	; 0x01
 7ec:	89 81       	ldd	r24, Y+1	; 0x01
 7ee:	81 30       	cpi	r24, 0x01	; 1
 7f0:	e1 f0       	breq	.+56     	; 0x82a <initUSART+0x4a>
 7f2:	81 ec       	ldi	r24, 0xC1	; 193
 7f4:	90 e0       	ldi	r25, 0x00	; 0
 7f6:	21 ec       	ldi	r18, 0xC1	; 193
 7f8:	30 e0       	ldi	r19, 0x00	; 0
 7fa:	f9 01       	movw	r30, r18
 7fc:	20 81       	ld	r18, Z
 7fe:	28 61       	ori	r18, 0x18	; 24
 800:	fc 01       	movw	r30, r24
 802:	20 83       	st	Z, r18
 804:	82 ec       	ldi	r24, 0xC2	; 194
 806:	90 e0       	ldi	r25, 0x00	; 0
 808:	22 ec       	ldi	r18, 0xC2	; 194
 80a:	30 e0       	ldi	r19, 0x00	; 0
 80c:	f9 01       	movw	r30, r18
 80e:	20 81       	ld	r18, Z
 810:	26 60       	ori	r18, 0x06	; 6
 812:	fc 01       	movw	r30, r24
 814:	20 83       	st	Z, r18
 816:	84 ec       	ldi	r24, 0xC4	; 196
 818:	90 e0       	ldi	r25, 0x00	; 0
 81a:	23 e3       	ldi	r18, 0x33	; 51
 81c:	fc 01       	movw	r30, r24
 81e:	20 83       	st	Z, r18
 820:	85 ec       	ldi	r24, 0xC5	; 197
 822:	90 e0       	ldi	r25, 0x00	; 0
 824:	fc 01       	movw	r30, r24
 826:	10 82       	st	Z, r1
 828:	1b c0       	rjmp	.+54     	; 0x860 <initUSART+0x80>
 82a:	89 ec       	ldi	r24, 0xC9	; 201
 82c:	90 e0       	ldi	r25, 0x00	; 0
 82e:	29 ec       	ldi	r18, 0xC9	; 201
 830:	30 e0       	ldi	r19, 0x00	; 0
 832:	f9 01       	movw	r30, r18
 834:	20 81       	ld	r18, Z
 836:	28 61       	ori	r18, 0x18	; 24
 838:	fc 01       	movw	r30, r24
 83a:	20 83       	st	Z, r18
 83c:	8a ec       	ldi	r24, 0xCA	; 202
 83e:	90 e0       	ldi	r25, 0x00	; 0
 840:	2a ec       	ldi	r18, 0xCA	; 202
 842:	30 e0       	ldi	r19, 0x00	; 0
 844:	f9 01       	movw	r30, r18
 846:	20 81       	ld	r18, Z
 848:	26 60       	ori	r18, 0x06	; 6
 84a:	fc 01       	movw	r30, r24
 84c:	20 83       	st	Z, r18
 84e:	8c ec       	ldi	r24, 0xCC	; 204
 850:	90 e0       	ldi	r25, 0x00	; 0
 852:	23 e3       	ldi	r18, 0x33	; 51
 854:	fc 01       	movw	r30, r24
 856:	20 83       	st	Z, r18
 858:	8d ec       	ldi	r24, 0xCD	; 205
 85a:	90 e0       	ldi	r25, 0x00	; 0
 85c:	fc 01       	movw	r30, r24
 85e:	10 82       	st	Z, r1
 860:	00 00       	nop
 862:	0f 90       	pop	r0
 864:	df 91       	pop	r29
 866:	cf 91       	pop	r28
 868:	08 95       	ret

0000086a <USART_IsSendReady>:
 86a:	cf 93       	push	r28
 86c:	df 93       	push	r29
 86e:	1f 92       	push	r1
 870:	cd b7       	in	r28, 0x3d	; 61
 872:	de b7       	in	r29, 0x3e	; 62
 874:	89 83       	std	Y+1, r24	; 0x01
 876:	89 81       	ldd	r24, Y+1	; 0x01
 878:	81 30       	cpi	r24, 0x01	; 1
 87a:	31 f0       	breq	.+12     	; 0x888 <USART_IsSendReady+0x1e>
 87c:	80 ec       	ldi	r24, 0xC0	; 192
 87e:	90 e0       	ldi	r25, 0x00	; 0
 880:	fc 01       	movw	r30, r24
 882:	80 81       	ld	r24, Z
 884:	80 72       	andi	r24, 0x20	; 32
 886:	05 c0       	rjmp	.+10     	; 0x892 <USART_IsSendReady+0x28>
 888:	88 ec       	ldi	r24, 0xC8	; 200
 88a:	90 e0       	ldi	r25, 0x00	; 0
 88c:	fc 01       	movw	r30, r24
 88e:	80 81       	ld	r24, Z
 890:	80 72       	andi	r24, 0x20	; 32
 892:	0f 90       	pop	r0
 894:	df 91       	pop	r29
 896:	cf 91       	pop	r28
 898:	08 95       	ret

0000089a <USART_Flush>:
 89a:	cf 93       	push	r28
 89c:	df 93       	push	r29
 89e:	1f 92       	push	r1
 8a0:	cd b7       	in	r28, 0x3d	; 61
 8a2:	de b7       	in	r29, 0x3e	; 62
 8a4:	89 83       	std	Y+1, r24	; 0x01
 8a6:	89 81       	ldd	r24, Y+1	; 0x01
 8a8:	81 30       	cpi	r24, 0x01	; 1
 8aa:	a1 f0       	breq	.+40     	; 0x8d4 <USART_Flush+0x3a>
 8ac:	06 c0       	rjmp	.+12     	; 0x8ba <USART_Flush+0x20>
 8ae:	86 ec       	ldi	r24, 0xC6	; 198
 8b0:	90 e0       	ldi	r25, 0x00	; 0
 8b2:	fc 01       	movw	r30, r24
 8b4:	80 81       	ld	r24, Z
 8b6:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <dummy.1744>
 8ba:	80 ec       	ldi	r24, 0xC0	; 192
 8bc:	90 e0       	ldi	r25, 0x00	; 0
 8be:	fc 01       	movw	r30, r24
 8c0:	80 81       	ld	r24, Z
 8c2:	88 23       	and	r24, r24
 8c4:	a4 f3       	brlt	.-24     	; 0x8ae <USART_Flush+0x14>
 8c6:	0c c0       	rjmp	.+24     	; 0x8e0 <USART_Flush+0x46>
 8c8:	8e ec       	ldi	r24, 0xCE	; 206
 8ca:	90 e0       	ldi	r25, 0x00	; 0
 8cc:	fc 01       	movw	r30, r24
 8ce:	80 81       	ld	r24, Z
 8d0:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <dummy.1744>
 8d4:	88 ec       	ldi	r24, 0xC8	; 200
 8d6:	90 e0       	ldi	r25, 0x00	; 0
 8d8:	fc 01       	movw	r30, r24
 8da:	80 81       	ld	r24, Z
 8dc:	88 23       	and	r24, r24
 8de:	a4 f3       	brlt	.-24     	; 0x8c8 <USART_Flush+0x2e>
 8e0:	00 00       	nop
 8e2:	0f 90       	pop	r0
 8e4:	df 91       	pop	r29
 8e6:	cf 91       	pop	r28
 8e8:	08 95       	ret

000008ea <USART_Send>:
 8ea:	cf 93       	push	r28
 8ec:	df 93       	push	r29
 8ee:	00 d0       	rcall	.+0      	; 0x8f0 <USART_Send+0x6>
 8f0:	cd b7       	in	r28, 0x3d	; 61
 8f2:	de b7       	in	r29, 0x3e	; 62
 8f4:	89 83       	std	Y+1, r24	; 0x01
 8f6:	6a 83       	std	Y+2, r22	; 0x02
 8f8:	8a 81       	ldd	r24, Y+2	; 0x02
 8fa:	81 30       	cpi	r24, 0x01	; 1
 8fc:	89 f0       	breq	.+34     	; 0x920 <USART_Send+0x36>
 8fe:	00 00       	nop
 900:	80 ec       	ldi	r24, 0xC0	; 192
 902:	90 e0       	ldi	r25, 0x00	; 0
 904:	fc 01       	movw	r30, r24
 906:	80 81       	ld	r24, Z
 908:	88 2f       	mov	r24, r24
 90a:	90 e0       	ldi	r25, 0x00	; 0
 90c:	80 72       	andi	r24, 0x20	; 32
 90e:	99 27       	eor	r25, r25
 910:	89 2b       	or	r24, r25
 912:	b1 f3       	breq	.-20     	; 0x900 <USART_Send+0x16>
 914:	86 ec       	ldi	r24, 0xC6	; 198
 916:	90 e0       	ldi	r25, 0x00	; 0
 918:	29 81       	ldd	r18, Y+1	; 0x01
 91a:	fc 01       	movw	r30, r24
 91c:	20 83       	st	Z, r18
 91e:	10 c0       	rjmp	.+32     	; 0x940 <USART_Send+0x56>
 920:	00 00       	nop
 922:	88 ec       	ldi	r24, 0xC8	; 200
 924:	90 e0       	ldi	r25, 0x00	; 0
 926:	fc 01       	movw	r30, r24
 928:	80 81       	ld	r24, Z
 92a:	88 2f       	mov	r24, r24
 92c:	90 e0       	ldi	r25, 0x00	; 0
 92e:	80 72       	andi	r24, 0x20	; 32
 930:	99 27       	eor	r25, r25
 932:	89 2b       	or	r24, r25
 934:	b1 f3       	breq	.-20     	; 0x922 <USART_Send+0x38>
 936:	8e ec       	ldi	r24, 0xCE	; 206
 938:	90 e0       	ldi	r25, 0x00	; 0
 93a:	29 81       	ldd	r18, Y+1	; 0x01
 93c:	fc 01       	movw	r30, r24
 93e:	20 83       	st	Z, r18
 940:	00 00       	nop
 942:	0f 90       	pop	r0
 944:	0f 90       	pop	r0
 946:	df 91       	pop	r29
 948:	cf 91       	pop	r28
 94a:	08 95       	ret

0000094c <tasks_task>:


enum TASKS{tasks_start, tasks_send, tasks_sleep} task_state;
	
int tasks_task(int state)
{
 94c:	cf 93       	push	r28
 94e:	df 93       	push	r29
 950:	00 d0       	rcall	.+0      	; 0x952 <tasks_task+0x6>
 952:	cd b7       	in	r28, 0x3d	; 61
 954:	de b7       	in	r29, 0x3e	; 62
 956:	9a 83       	std	Y+2, r25	; 0x02
 958:	89 83       	std	Y+1, r24	; 0x01
	static unsigned char tk; // counts to 5 seconds
	switch(state)
 95a:	89 81       	ldd	r24, Y+1	; 0x01
 95c:	9a 81       	ldd	r25, Y+2	; 0x02
 95e:	81 30       	cpi	r24, 0x01	; 1
 960:	91 05       	cpc	r25, r1
 962:	a1 f1       	breq	.+104    	; 0x9cc <tasks_task+0x80>
 964:	82 30       	cpi	r24, 0x02	; 2
 966:	91 05       	cpc	r25, r1
 968:	09 f4       	brne	.+2      	; 0x96c <tasks_task+0x20>
 96a:	41 c0       	rjmp	.+130    	; 0x9ee <tasks_task+0xa2>
 96c:	89 2b       	or	r24, r25
 96e:	e1 f5       	brne	.+120    	; 0x9e8 <tasks_task+0x9c>
	{
		case tasks_start:			// initializes all ports
			DDRA = 0x00; PORTA = 0xff;
 970:	81 e2       	ldi	r24, 0x21	; 33
 972:	90 e0       	ldi	r25, 0x00	; 0
 974:	fc 01       	movw	r30, r24
 976:	10 82       	st	Z, r1
 978:	82 e2       	ldi	r24, 0x22	; 34
 97a:	90 e0       	ldi	r25, 0x00	; 0
 97c:	2f ef       	ldi	r18, 0xFF	; 255
 97e:	fc 01       	movw	r30, r24
 980:	20 83       	st	Z, r18
			DDRB = 0xff; PORTB = 0x00;
 982:	84 e2       	ldi	r24, 0x24	; 36
 984:	90 e0       	ldi	r25, 0x00	; 0
 986:	2f ef       	ldi	r18, 0xFF	; 255
 988:	fc 01       	movw	r30, r24
 98a:	20 83       	st	Z, r18
 98c:	85 e2       	ldi	r24, 0x25	; 37
 98e:	90 e0       	ldi	r25, 0x00	; 0
 990:	fc 01       	movw	r30, r24
 992:	10 82       	st	Z, r1
			DDRC = 0x00; PORTC = 0xff;
 994:	87 e2       	ldi	r24, 0x27	; 39
 996:	90 e0       	ldi	r25, 0x00	; 0
 998:	fc 01       	movw	r30, r24
 99a:	10 82       	st	Z, r1
 99c:	88 e2       	ldi	r24, 0x28	; 40
 99e:	90 e0       	ldi	r25, 0x00	; 0
 9a0:	2f ef       	ldi	r18, 0xFF	; 255
 9a2:	fc 01       	movw	r30, r24
 9a4:	20 83       	st	Z, r18
			DDRD = 0xff; PORTD = 0x00;
 9a6:	8a e2       	ldi	r24, 0x2A	; 42
 9a8:	90 e0       	ldi	r25, 0x00	; 0
 9aa:	2f ef       	ldi	r18, 0xFF	; 255
 9ac:	fc 01       	movw	r30, r24
 9ae:	20 83       	st	Z, r18
 9b0:	8b e2       	ldi	r24, 0x2B	; 43
 9b2:	90 e0       	ldi	r25, 0x00	; 0
 9b4:	fc 01       	movw	r30, r24
 9b6:	10 82       	st	Z, r1
			tk = 50;
 9b8:	82 e3       	ldi	r24, 0x32	; 50
 9ba:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <tk.1778>
			initUSART(1);
 9be:	81 e0       	ldi	r24, 0x01	; 1
 9c0:	0f df       	rcall	.-482    	; 0x7e0 <initUSART>
			state = tasks_send;
 9c2:	81 e0       	ldi	r24, 0x01	; 1
 9c4:	90 e0       	ldi	r25, 0x00	; 0
 9c6:	9a 83       	std	Y+2, r25	; 0x02
 9c8:	89 83       	std	Y+1, r24	; 0x01
			break;
 9ca:	12 c0       	rjmp	.+36     	; 0x9f0 <tasks_task+0xa4>
		case tasks_send:
			if(tk == 0)
 9cc:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <tk.1778>
 9d0:	88 23       	and	r24, r24
 9d2:	29 f4       	brne	.+10     	; 0x9de <tasks_task+0x92>
				state = tasks_sleep;
 9d4:	82 e0       	ldi	r24, 0x02	; 2
 9d6:	90 e0       	ldi	r25, 0x00	; 0
 9d8:	9a 83       	std	Y+2, r25	; 0x02
 9da:	89 83       	std	Y+1, r24	; 0x01
			else
				state = tasks_send;
			break;
 9dc:	09 c0       	rjmp	.+18     	; 0x9f0 <tasks_task+0xa4>
			break;
		case tasks_send:
			if(tk == 0)
				state = tasks_sleep;
			else
				state = tasks_send;
 9de:	81 e0       	ldi	r24, 0x01	; 1
 9e0:	90 e0       	ldi	r25, 0x00	; 0
 9e2:	9a 83       	std	Y+2, r25	; 0x02
 9e4:	89 83       	std	Y+1, r24	; 0x01
			break;
 9e6:	04 c0       	rjmp	.+8      	; 0x9f0 <tasks_task+0xa4>
		case tasks_sleep:
			break;
		default:
			state = tasks_start;
 9e8:	1a 82       	std	Y+2, r1	; 0x02
 9ea:	19 82       	std	Y+1, r1	; 0x01
			break;
 9ec:	01 c0       	rjmp	.+2      	; 0x9f0 <tasks_task+0xa4>
				state = tasks_sleep;
			else
				state = tasks_send;
			break;
		case tasks_sleep:
			break;
 9ee:	00 00       	nop
		default:
			state = tasks_start;
			break;
	}
	switch(state)
 9f0:	89 81       	ldd	r24, Y+1	; 0x01
 9f2:	9a 81       	ldd	r25, Y+2	; 0x02
 9f4:	81 30       	cpi	r24, 0x01	; 1
 9f6:	91 05       	cpc	r25, r1
 9f8:	61 f0       	breq	.+24     	; 0xa12 <tasks_task+0xc6>
 9fa:	82 30       	cpi	r24, 0x02	; 2
 9fc:	91 05       	cpc	r25, r1
 9fe:	09 f4       	brne	.+2      	; 0xa02 <tasks_task+0xb6>
 a00:	45 c0       	rjmp	.+138    	; 0xa8c <tasks_task+0x140>
 a02:	89 2b       	or	r24, r25
 a04:	09 f0       	breq	.+2      	; 0xa08 <tasks_task+0xbc>
 a06:	3f c0       	rjmp	.+126    	; 0xa86 <tasks_task+0x13a>
		case tasks_start:			// initializes all ports
			/*DDRA = 0x00; PORTA = 0xff;
			DDRB = 0xff; PORTB = 0x00;
			DDRC = 0x00; PORTC = 0xff;
			DDRD = 0xff; PORTD = 0x00;*/
			state = tasks_send;
 a08:	81 e0       	ldi	r24, 0x01	; 1
 a0a:	90 e0       	ldi	r25, 0x00	; 0
 a0c:	9a 83       	std	Y+2, r25	; 0x02
 a0e:	89 83       	std	Y+1, r24	; 0x01
			break;
 a10:	3e c0       	rjmp	.+124    	; 0xa8e <tasks_task+0x142>
		case tasks_send:
			PORTB = presSens | buttons | direction1 | (speed << 2); // temporary
 a12:	85 e2       	ldi	r24, 0x25	; 37
 a14:	90 e0       	ldi	r25, 0x00	; 0
 a16:	30 91 04 01 	lds	r19, 0x0104	; 0x800104 <__data_end>
 a1a:	20 91 13 01 	lds	r18, 0x0113	; 0x800113 <buttons>
 a1e:	32 2b       	or	r19, r18
 a20:	20 91 0d 01 	lds	r18, 0x010D	; 0x80010d <direction1>
 a24:	23 2b       	or	r18, r19
 a26:	42 2f       	mov	r20, r18
 a28:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <speed>
 a2c:	22 2f       	mov	r18, r18
 a2e:	30 e0       	ldi	r19, 0x00	; 0
 a30:	22 0f       	add	r18, r18
 a32:	33 1f       	adc	r19, r19
 a34:	22 0f       	add	r18, r18
 a36:	33 1f       	adc	r19, r19
 a38:	24 2b       	or	r18, r20
 a3a:	fc 01       	movw	r30, r24
 a3c:	20 83       	st	Z, r18
			//PORTB = magTL;
			if(ADC == 0 && presSens == 0 && buttons == 0)
 a3e:	88 e7       	ldi	r24, 0x78	; 120
 a40:	90 e0       	ldi	r25, 0x00	; 0
 a42:	fc 01       	movw	r30, r24
 a44:	80 81       	ld	r24, Z
 a46:	91 81       	ldd	r25, Z+1	; 0x01
 a48:	89 2b       	or	r24, r25
 a4a:	69 f4       	brne	.+26     	; 0xa66 <tasks_task+0x11a>
 a4c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 a50:	88 23       	and	r24, r24
 a52:	49 f4       	brne	.+18     	; 0xa66 <tasks_task+0x11a>
 a54:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <buttons>
 a58:	88 23       	and	r24, r24
 a5a:	29 f4       	brne	.+10     	; 0xa66 <tasks_task+0x11a>
				tk--;
 a5c:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <tk.1778>
 a60:	81 50       	subi	r24, 0x01	; 1
 a62:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <tk.1778>
			if(USART_IsSendReady(1))
 a66:	81 e0       	ldi	r24, 0x01	; 1
 a68:	00 df       	rcall	.-512    	; 0x86a <USART_IsSendReady>
 a6a:	88 23       	and	r24, r24
 a6c:	41 f0       	breq	.+16     	; 0xa7e <tasks_task+0x132>
			{
				USART_Flush(1);
 a6e:	81 e0       	ldi	r24, 0x01	; 1
 a70:	14 df       	rcall	.-472    	; 0x89a <USART_Flush>
 a72:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <buttons>
				USART_Send(buttons + '0',1);
 a76:	80 5d       	subi	r24, 0xD0	; 208
 a78:	61 e0       	ldi	r22, 0x01	; 1
 a7a:	37 df       	rcall	.-402    	; 0x8ea <USART_Send>
 a7c:	08 c0       	rjmp	.+16     	; 0xa8e <tasks_task+0x142>
			}
			else
				tk = 50;
			break;
 a7e:	82 e3       	ldi	r24, 0x32	; 50
			{
				USART_Flush(1);
				USART_Send(buttons + '0',1);
			}
			else
				tk = 50;
 a80:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <tk.1778>
 a84:	04 c0       	rjmp	.+8      	; 0xa8e <tasks_task+0x142>
			break;
 a86:	1a 82       	std	Y+2, r1	; 0x02
		case tasks_sleep:
			//sleep();
			break;
		default:
			state = tasks_start;
 a88:	19 82       	std	Y+1, r1	; 0x01
 a8a:	01 c0       	rjmp	.+2      	; 0xa8e <tasks_task+0x142>
			break;
 a8c:	00 00       	nop
			else
				tk = 50;
			break;
		case tasks_sleep:
			//sleep();
			break;
 a8e:	89 81       	ldd	r24, Y+1	; 0x01
		default:
			state = tasks_start;
			break;
	}
	
	return state;
 a90:	9a 81       	ldd	r25, Y+2	; 0x02
 a92:	0f 90       	pop	r0
}
 a94:	0f 90       	pop	r0
 a96:	df 91       	pop	r29
 a98:	cf 91       	pop	r28
 a9a:	08 95       	ret

00000a9c <main>:
 a9c:	cf 93       	push	r28


int main(void)
{
 a9e:	df 93       	push	r29
 aa0:	cd b7       	in	r28, 0x3d	; 61
 aa2:	de b7       	in	r29, 0x3e	; 62
 aa4:	c0 57       	subi	r28, 0x70	; 112
 aa6:	d1 09       	sbc	r29, r1
 aa8:	0f b6       	in	r0, 0x3f	; 63
 aaa:	f8 94       	cli
 aac:	de bf       	out	0x3e, r29	; 62
 aae:	0f be       	out	0x3f, r0	; 63
 ab0:	cd bf       	out	0x3d, r28	; 61
    /* Replace with your application code */
	unsigned char contTime = 100;
 ab2:	84 e6       	ldi	r24, 0x64	; 100
 ab4:	89 83       	std	Y+1, r24	; 0x01
	task  Pressure;
	task Poll1;
	task Poll2;
	task Mag;
	
	controller.state = tasks_start;
 ab6:	1b 82       	std	Y+3, r1	; 0x03
	controller.elapsedTime = contTime;
 ab8:	89 81       	ldd	r24, Y+1	; 0x01
 aba:	88 2f       	mov	r24, r24
 abc:	90 e0       	ldi	r25, 0x00	; 0
 abe:	a0 e0       	ldi	r26, 0x00	; 0
 ac0:	b0 e0       	ldi	r27, 0x00	; 0
 ac2:	88 87       	std	Y+8, r24	; 0x08
 ac4:	99 87       	std	Y+9, r25	; 0x09
 ac6:	aa 87       	std	Y+10, r26	; 0x0a
 ac8:	bb 87       	std	Y+11, r27	; 0x0b
	controller.period = contTime;
 aca:	89 81       	ldd	r24, Y+1	; 0x01
 acc:	88 2f       	mov	r24, r24
 ace:	90 e0       	ldi	r25, 0x00	; 0
 ad0:	a0 e0       	ldi	r26, 0x00	; 0
 ad2:	b0 e0       	ldi	r27, 0x00	; 0
 ad4:	8c 83       	std	Y+4, r24	; 0x04
 ad6:	9d 83       	std	Y+5, r25	; 0x05
 ad8:	ae 83       	std	Y+6, r26	; 0x06
 ada:	bf 83       	std	Y+7, r27	; 0x07
	controller.TickFct = &tasks_task;
 adc:	86 ea       	ldi	r24, 0xA6	; 166
 ade:	94 e0       	ldi	r25, 0x04	; 4
 ae0:	9d 87       	std	Y+13, r25	; 0x0d
 ae2:	8c 87       	std	Y+12, r24	; 0x0c
	
	Pressure.state = presStart;
 ae4:	1e 86       	std	Y+14, r1	; 0x0e
	Pressure.TickFct = &PRESSENSE_task;
 ae6:	83 ed       	ldi	r24, 0xD3	; 211
 ae8:	90 e0       	ldi	r25, 0x00	; 0
 aea:	98 8f       	std	Y+24, r25	; 0x18
 aec:	8f 8b       	std	Y+23, r24	; 0x17
	Pressure.elapsedTime = contTime;
 aee:	89 81       	ldd	r24, Y+1	; 0x01
 af0:	88 2f       	mov	r24, r24
 af2:	90 e0       	ldi	r25, 0x00	; 0
 af4:	a0 e0       	ldi	r26, 0x00	; 0
 af6:	b0 e0       	ldi	r27, 0x00	; 0
 af8:	8b 8b       	std	Y+19, r24	; 0x13
 afa:	9c 8b       	std	Y+20, r25	; 0x14
 afc:	ad 8b       	std	Y+21, r26	; 0x15
 afe:	be 8b       	std	Y+22, r27	; 0x16
	Pressure.period = contTime;
 b00:	89 81       	ldd	r24, Y+1	; 0x01
 b02:	88 2f       	mov	r24, r24
 b04:	90 e0       	ldi	r25, 0x00	; 0
 b06:	a0 e0       	ldi	r26, 0x00	; 0
 b08:	b0 e0       	ldi	r27, 0x00	; 0
 b0a:	8f 87       	std	Y+15, r24	; 0x0f
 b0c:	98 8b       	std	Y+16, r25	; 0x10
 b0e:	a9 8b       	std	Y+17, r26	; 0x11
 b10:	ba 8b       	std	Y+18, r27	; 0x12
	tasksPeriodGCD = contTime;
 b12:	89 81       	ldd	r24, Y+1	; 0x01
 b14:	88 2f       	mov	r24, r24
 b16:	90 e0       	ldi	r25, 0x00	; 0
 b18:	a0 e0       	ldi	r26, 0x00	; 0
 b1a:	b0 e0       	ldi	r27, 0x00	; 0
 b1c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 b20:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 b24:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 b28:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
	
	Poll1.state = B1_start;
 b2c:	19 8e       	std	Y+25, r1	; 0x19
	Poll1.elapsedTime = contTime;
 b2e:	89 81       	ldd	r24, Y+1	; 0x01
 b30:	88 2f       	mov	r24, r24
 b32:	90 e0       	ldi	r25, 0x00	; 0
 b34:	a0 e0       	ldi	r26, 0x00	; 0
 b36:	b0 e0       	ldi	r27, 0x00	; 0
 b38:	8e 8f       	std	Y+30, r24	; 0x1e
 b3a:	9f 8f       	std	Y+31, r25	; 0x1f
 b3c:	a8 a3       	std	Y+32, r26	; 0x20
 b3e:	b9 a3       	std	Y+33, r27	; 0x21
	Poll1.period = contTime;
 b40:	89 81       	ldd	r24, Y+1	; 0x01
 b42:	88 2f       	mov	r24, r24
 b44:	90 e0       	ldi	r25, 0x00	; 0
 b46:	a0 e0       	ldi	r26, 0x00	; 0
 b48:	b0 e0       	ldi	r27, 0x00	; 0
 b4a:	8a 8f       	std	Y+26, r24	; 0x1a
 b4c:	9b 8f       	std	Y+27, r25	; 0x1b
 b4e:	ac 8f       	std	Y+28, r26	; 0x1c
 b50:	bd 8f       	std	Y+29, r27	; 0x1d
	Poll1.TickFct = &B1_task;
 b52:	80 e3       	ldi	r24, 0x30	; 48
 b54:	93 e0       	ldi	r25, 0x03	; 3
 b56:	9b a3       	std	Y+35, r25	; 0x23
 b58:	8a a3       	std	Y+34, r24	; 0x22
	
	Poll2.state = B2_start;
 b5a:	1c a2       	std	Y+36, r1	; 0x24
	Poll2.elapsedTime = contTime;
 b5c:	89 81       	ldd	r24, Y+1	; 0x01
 b5e:	88 2f       	mov	r24, r24
 b60:	90 e0       	ldi	r25, 0x00	; 0
 b62:	a0 e0       	ldi	r26, 0x00	; 0
 b64:	b0 e0       	ldi	r27, 0x00	; 0
 b66:	89 a7       	std	Y+41, r24	; 0x29
 b68:	9a a7       	std	Y+42, r25	; 0x2a
 b6a:	ab a7       	std	Y+43, r26	; 0x2b
 b6c:	bc a7       	std	Y+44, r27	; 0x2c
	Poll2.period = contTime;
 b6e:	89 81       	ldd	r24, Y+1	; 0x01
 b70:	88 2f       	mov	r24, r24
 b72:	90 e0       	ldi	r25, 0x00	; 0
 b74:	a0 e0       	ldi	r26, 0x00	; 0
 b76:	b0 e0       	ldi	r27, 0x00	; 0
 b78:	8d a3       	std	Y+37, r24	; 0x25
 b7a:	9e a3       	std	Y+38, r25	; 0x26
 b7c:	af a3       	std	Y+39, r26	; 0x27
 b7e:	b8 a7       	std	Y+40, r27	; 0x28
	Poll2.TickFct = &B2_task;
 b80:	80 e9       	ldi	r24, 0x90	; 144
 b82:	93 e0       	ldi	r25, 0x03	; 3
 b84:	9e a7       	std	Y+46, r25	; 0x2e
 b86:	8d a7       	std	Y+45, r24	; 0x2d
	
	Mag.state = magStart;
 b88:	1f a6       	std	Y+47, r1	; 0x2f
	Mag.elapsedTime = contTime/2;
 b8a:	89 81       	ldd	r24, Y+1	; 0x01
 b8c:	86 95       	lsr	r24
 b8e:	88 2f       	mov	r24, r24
 b90:	90 e0       	ldi	r25, 0x00	; 0
 b92:	a0 e0       	ldi	r26, 0x00	; 0
 b94:	b0 e0       	ldi	r27, 0x00	; 0
 b96:	8c ab       	std	Y+52, r24	; 0x34
 b98:	9d ab       	std	Y+53, r25	; 0x35
 b9a:	ae ab       	std	Y+54, r26	; 0x36
 b9c:	bf ab       	std	Y+55, r27	; 0x37
	Mag.period = contTime;
 b9e:	89 81       	ldd	r24, Y+1	; 0x01
 ba0:	88 2f       	mov	r24, r24
 ba2:	90 e0       	ldi	r25, 0x00	; 0
 ba4:	a0 e0       	ldi	r26, 0x00	; 0
 ba6:	b0 e0       	ldi	r27, 0x00	; 0
 ba8:	88 ab       	std	Y+48, r24	; 0x30
 baa:	99 ab       	std	Y+49, r25	; 0x31
 bac:	aa ab       	std	Y+50, r26	; 0x32
 bae:	bb ab       	std	Y+51, r27	; 0x33
	Mag.TickFct = &magSense_task;
 bb0:	88 e1       	ldi	r24, 0x18	; 24
 bb2:	91 e0       	ldi	r25, 0x01	; 1
 bb4:	99 af       	std	Y+57, r25	; 0x39
 bb6:	88 af       	std	Y+56, r24	; 0x38
	/*DDRA = 0x00; PORTA = 0xff;
	DDRB = 0xff; PORTB = 0x00;
	DDRC = 0xff; PORTC = 0x00;
	DDRD = 0xff; PORTD = 0x00;
	*/
	TimerSet(contTime/2);
 bb8:	89 81       	ldd	r24, Y+1	; 0x01
 bba:	86 95       	lsr	r24
 bbc:	88 2f       	mov	r24, r24
 bbe:	90 e0       	ldi	r25, 0x00	; 0
 bc0:	a0 e0       	ldi	r26, 0x00	; 0
 bc2:	b0 e0       	ldi	r27, 0x00	; 0
 bc4:	bc 01       	movw	r22, r24
 bc6:	cd 01       	movw	r24, r26
 bc8:	e6 dc       	rcall	.-1588   	; 0x596 <TimerSet>
	TimerOn();
 bca:	13 dd       	rcall	.-1498   	; 0x5f2 <TimerOn>
 bcc:	8b e0       	ldi	r24, 0x0B	; 11
	
	
	task temp[] = {controller, Pressure, Poll1, Poll2, Mag};
 bce:	fe 01       	movw	r30, r28
 bd0:	33 96       	adiw	r30, 0x03	; 3
 bd2:	de 01       	movw	r26, r28
 bd4:	da 96       	adiw	r26, 0x3a	; 58
 bd6:	01 90       	ld	r0, Z+
 bd8:	0d 92       	st	X+, r0
 bda:	8a 95       	dec	r24
 bdc:	e1 f7       	brne	.-8      	; 0xbd6 <main+0x13a>
 bde:	ce 01       	movw	r24, r28
 be0:	8b 5b       	subi	r24, 0xBB	; 187
 be2:	9f 4f       	sbci	r25, 0xFF	; 255
 be4:	2b e0       	ldi	r18, 0x0B	; 11
 be6:	fe 01       	movw	r30, r28
 be8:	3e 96       	adiw	r30, 0x0e	; 14
 bea:	dc 01       	movw	r26, r24
 bec:	01 90       	ld	r0, Z+
 bee:	0d 92       	st	X+, r0
 bf0:	2a 95       	dec	r18
 bf2:	e1 f7       	brne	.-8      	; 0xbec <main+0x150>
 bf4:	ce 01       	movw	r24, r28
 bf6:	80 5b       	subi	r24, 0xB0	; 176
 bf8:	9f 4f       	sbci	r25, 0xFF	; 255
 bfa:	2b e0       	ldi	r18, 0x0B	; 11
 bfc:	fe 01       	movw	r30, r28
 bfe:	79 96       	adiw	r30, 0x19	; 25
 c00:	dc 01       	movw	r26, r24
 c02:	01 90       	ld	r0, Z+
 c04:	0d 92       	st	X+, r0
 c06:	2a 95       	dec	r18
 c08:	e1 f7       	brne	.-8      	; 0xc02 <main+0x166>
 c0a:	ce 01       	movw	r24, r28
 c0c:	85 5a       	subi	r24, 0xA5	; 165
 c0e:	9f 4f       	sbci	r25, 0xFF	; 255
 c10:	2b e0       	ldi	r18, 0x0B	; 11
 c12:	fe 01       	movw	r30, r28
 c14:	b4 96       	adiw	r30, 0x24	; 36
 c16:	dc 01       	movw	r26, r24
 c18:	01 90       	ld	r0, Z+
 c1a:	0d 92       	st	X+, r0
 c1c:	2a 95       	dec	r18
 c1e:	e1 f7       	brne	.-8      	; 0xc18 <main+0x17c>
 c20:	ce 01       	movw	r24, r28
 c22:	8a 59       	subi	r24, 0x9A	; 154
 c24:	9f 4f       	sbci	r25, 0xFF	; 255
 c26:	2b e0       	ldi	r18, 0x0B	; 11
 c28:	fe 01       	movw	r30, r28
 c2a:	bf 96       	adiw	r30, 0x2f	; 47
 c2c:	dc 01       	movw	r26, r24
 c2e:	01 90       	ld	r0, Z+
 c30:	0d 92       	st	X+, r0
 c32:	2a 95       	dec	r18
 c34:	e1 f7       	brne	.-8      	; 0xc2e <main+0x192>
 c36:	ce 01       	movw	r24, r28
	tasks = &temp;
 c38:	ca 96       	adiw	r24, 0x3a	; 58
 c3a:	90 93 18 01 	sts	0x0118, r25	; 0x800118 <tasks+0x1>
 c3e:	80 93 17 01 	sts	0x0117, r24	; 0x800117 <tasks>
 c42:	85 e0       	ldi	r24, 0x05	; 5
	tasksNum = 5;
 c44:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <tasksNum>
 c48:	1a 82       	std	Y+2, r1	; 0x02
	//task * temp[] = {Pressure};
		
	unsigned char selector = 0;
 c4a:	ff cf       	rjmp	.-2      	; 0xc4a <main+0x1ae>

00000c4c <_exit>:
		//ADC_ON();
		//PORTB = ADC_SEND();
		//ADC_SELECT(selector);
		//selector++;
		//PORTB = presSens;
    }
 c4c:	f8 94       	cli

00000c4e <__stop_program>:
 c4e:	ff cf       	rjmp	.-2      	; 0xc4e <__stop_program>
