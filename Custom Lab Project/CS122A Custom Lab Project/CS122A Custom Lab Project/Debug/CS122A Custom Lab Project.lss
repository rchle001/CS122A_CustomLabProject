
CS122A Custom Lab Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000cf4  00000d88  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cf4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000018  00800104  00800104  00000d8c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000d8c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000dbc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00000dfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e47  00000000  00000000  00000ebc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008de  00000000  00000000  00001d03  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ae1  00000000  00000000  000025e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000300  00000000  00000000  000030c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006c6  00000000  00000000  000033c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000066a  00000000  00000000  00003a8a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  000040f4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	d8 c2       	rjmp	.+1456   	; 0x5e6 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 ef       	ldi	r30, 0xF4	; 244
  a0:	fc e0       	ldi	r31, 0x0C	; 12
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e0       	ldi	r26, 0x04	; 4
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ac 31       	cpi	r26, 0x1C	; 28
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	38 d5       	rcall	.+2672   	; 0xb34 <main>
  c4:	15 c6       	rjmp	.+3114   	; 0xcf0 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <ADC_ON>:
	}
	else {
		while ( !(UCSR1A & (1 << RXC1)) );
		return UDR1;
	}
}
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	cd b7       	in	r28, 0x3d	; 61
  ce:	de b7       	in	r29, 0x3e	; 62
  d0:	8c e7       	ldi	r24, 0x7C	; 124
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <muxselect>
  d8:	fc 01       	movw	r30, r24
  da:	20 83       	st	Z, r18
  dc:	8a e7       	ldi	r24, 0x7A	; 122
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	23 ec       	ldi	r18, 0xC3	; 195
  e2:	fc 01       	movw	r30, r24
  e4:	20 83       	st	Z, r18
  e6:	00 00       	nop
  e8:	df 91       	pop	r29
  ea:	cf 91       	pop	r28
  ec:	08 95       	ret

000000ee <ADC_SELECT>:
  ee:	cf 93       	push	r28
  f0:	df 93       	push	r29
  f2:	1f 92       	push	r1
  f4:	cd b7       	in	r28, 0x3d	; 61
  f6:	de b7       	in	r29, 0x3e	; 62
  f8:	89 83       	std	Y+1, r24	; 0x01
  fa:	89 81       	ldd	r24, Y+1	; 0x01
  fc:	88 30       	cpi	r24, 0x08	; 8
  fe:	48 f4       	brcc	.+18     	; 0x112 <ADC_SELECT+0x24>
 100:	89 81       	ldd	r24, Y+1	; 0x01
 102:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <muxselect>
 106:	8c e7       	ldi	r24, 0x7C	; 124
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <muxselect>
 10e:	fc 01       	movw	r30, r24
 110:	20 83       	st	Z, r18
 112:	00 00       	nop
 114:	0f 90       	pop	r0
 116:	df 91       	pop	r29
 118:	cf 91       	pop	r28
 11a:	08 95       	ret

0000011c <ADC_OFF>:
 11c:	cf 93       	push	r28
 11e:	df 93       	push	r29
 120:	cd b7       	in	r28, 0x3d	; 61
 122:	de b7       	in	r29, 0x3e	; 62
 124:	00 00       	nop
 126:	8a e7       	ldi	r24, 0x7A	; 122
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	fc 01       	movw	r30, r24
 12c:	80 81       	ld	r24, Z
 12e:	88 2f       	mov	r24, r24
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	80 71       	andi	r24, 0x10	; 16
 134:	99 27       	eor	r25, r25
 136:	89 2b       	or	r24, r25
 138:	b1 f3       	breq	.-20     	; 0x126 <ADC_OFF+0xa>
 13a:	8a e7       	ldi	r24, 0x7A	; 122
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	2f ef       	ldi	r18, 0xFF	; 255
 140:	fc 01       	movw	r30, r24
 142:	20 83       	st	Z, r18
 144:	00 00       	nop
 146:	df 91       	pop	r29
 148:	cf 91       	pop	r28
 14a:	08 95       	ret

0000014c <ADC_SEND>:
 14c:	cf 93       	push	r28
 14e:	df 93       	push	r29
 150:	cd b7       	in	r28, 0x3d	; 61
 152:	de b7       	in	r29, 0x3e	; 62
 154:	8a e7       	ldi	r24, 0x7A	; 122
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	2a e7       	ldi	r18, 0x7A	; 122
 15a:	30 e0       	ldi	r19, 0x00	; 0
 15c:	f9 01       	movw	r30, r18
 15e:	20 81       	ld	r18, Z
 160:	20 64       	ori	r18, 0x40	; 64
 162:	fc 01       	movw	r30, r24
 164:	20 83       	st	Z, r18
 166:	00 00       	nop
 168:	8a e7       	ldi	r24, 0x7A	; 122
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	fc 01       	movw	r30, r24
 16e:	80 81       	ld	r24, Z
 170:	88 2f       	mov	r24, r24
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	80 71       	andi	r24, 0x10	; 16
 176:	99 27       	eor	r25, r25
 178:	89 2b       	or	r24, r25
 17a:	b1 f3       	breq	.-20     	; 0x168 <ADC_SEND+0x1c>
 17c:	8a e7       	ldi	r24, 0x7A	; 122
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	2a e7       	ldi	r18, 0x7A	; 122
 182:	30 e0       	ldi	r19, 0x00	; 0
 184:	f9 01       	movw	r30, r18
 186:	20 81       	ld	r18, Z
 188:	2f 7b       	andi	r18, 0xBF	; 191
 18a:	fc 01       	movw	r30, r24
 18c:	20 83       	st	Z, r18
 18e:	88 e7       	ldi	r24, 0x78	; 120
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	fc 01       	movw	r30, r24
 194:	80 81       	ld	r24, Z
 196:	91 81       	ldd	r25, Z+1	; 0x01
 198:	96 95       	lsr	r25
 19a:	87 95       	ror	r24
 19c:	96 95       	lsr	r25
 19e:	87 95       	ror	r24
 1a0:	df 91       	pop	r29
 1a2:	cf 91       	pop	r28
 1a4:	08 95       	ret

000001a6 <PRESSENSE_task>:
 1a6:	cf 93       	push	r28
 1a8:	df 93       	push	r29
 1aa:	00 d0       	rcall	.+0      	; 0x1ac <PRESSENSE_task+0x6>
 1ac:	cd b7       	in	r28, 0x3d	; 61
 1ae:	de b7       	in	r29, 0x3e	; 62
 1b0:	9a 83       	std	Y+2, r25	; 0x02
 1b2:	89 83       	std	Y+1, r24	; 0x01
 1b4:	89 81       	ldd	r24, Y+1	; 0x01
 1b6:	9a 81       	ldd	r25, Y+2	; 0x02
 1b8:	81 30       	cpi	r24, 0x01	; 1
 1ba:	91 05       	cpc	r25, r1
 1bc:	81 f0       	breq	.+32     	; 0x1de <PRESSENSE_task+0x38>
 1be:	82 30       	cpi	r24, 0x02	; 2
 1c0:	91 05       	cpc	r25, r1
 1c2:	41 f0       	breq	.+16     	; 0x1d4 <PRESSENSE_task+0x2e>
 1c4:	89 2b       	or	r24, r25
 1c6:	81 f4       	brne	.+32     	; 0x1e8 <PRESSENSE_task+0x42>
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	9a 83       	std	Y+2, r25	; 0x02
 1ce:	89 83       	std	Y+1, r24	; 0x01
 1d0:	7b df       	rcall	.-266    	; 0xc8 <ADC_ON>
 1d2:	0d c0       	rjmp	.+26     	; 0x1ee <PRESSENSE_task+0x48>
 1d4:	82 e0       	ldi	r24, 0x02	; 2
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	9a 83       	std	Y+2, r25	; 0x02
 1da:	89 83       	std	Y+1, r24	; 0x01
 1dc:	08 c0       	rjmp	.+16     	; 0x1ee <PRESSENSE_task+0x48>
 1de:	81 e0       	ldi	r24, 0x01	; 1
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	9a 83       	std	Y+2, r25	; 0x02
 1e4:	89 83       	std	Y+1, r24	; 0x01
 1e6:	03 c0       	rjmp	.+6      	; 0x1ee <PRESSENSE_task+0x48>
 1e8:	1a 82       	std	Y+2, r1	; 0x02
 1ea:	19 82       	std	Y+1, r1	; 0x01
 1ec:	00 00       	nop
 1ee:	89 81       	ldd	r24, Y+1	; 0x01
 1f0:	9a 81       	ldd	r25, Y+2	; 0x02
 1f2:	81 30       	cpi	r24, 0x01	; 1
 1f4:	91 05       	cpc	r25, r1
 1f6:	41 f0       	breq	.+16     	; 0x208 <PRESSENSE_task+0x62>
 1f8:	82 30       	cpi	r24, 0x02	; 2
 1fa:	91 05       	cpc	r25, r1
 1fc:	19 f0       	breq	.+6      	; 0x204 <PRESSENSE_task+0x5e>
 1fe:	89 2b       	or	r24, r25
 200:	79 f0       	breq	.+30     	; 0x220 <PRESSENSE_task+0x7a>
 202:	0f c0       	rjmp	.+30     	; 0x222 <PRESSENSE_task+0x7c>
 204:	8b df       	rcall	.-234    	; 0x11c <ADC_OFF>
 206:	0d c0       	rjmp	.+26     	; 0x222 <PRESSENSE_task+0x7c>
 208:	80 e0       	ldi	r24, 0x00	; 0
 20a:	71 df       	rcall	.-286    	; 0xee <ADC_SELECT>
 20c:	9f df       	rcall	.-194    	; 0x14c <ADC_SEND>
 20e:	82 95       	swap	r24
 210:	8f 70       	andi	r24, 0x0F	; 15
 212:	9f e0       	ldi	r25, 0x0F	; 15
 214:	29 2f       	mov	r18, r25
 216:	28 1b       	sub	r18, r24
 218:	82 2f       	mov	r24, r18
 21a:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 21e:	01 c0       	rjmp	.+2      	; 0x222 <PRESSENSE_task+0x7c>
 220:	00 00       	nop
 222:	89 81       	ldd	r24, Y+1	; 0x01
 224:	9a 81       	ldd	r25, Y+2	; 0x02
 226:	0f 90       	pop	r0
 228:	0f 90       	pop	r0
 22a:	df 91       	pop	r29
 22c:	cf 91       	pop	r28
 22e:	08 95       	ret

00000230 <magSense_task>:
 230:	cf 93       	push	r28
 232:	df 93       	push	r29
 234:	00 d0       	rcall	.+0      	; 0x236 <magSense_task+0x6>
 236:	cd b7       	in	r28, 0x3d	; 61
 238:	de b7       	in	r29, 0x3e	; 62
 23a:	9a 83       	std	Y+2, r25	; 0x02
 23c:	89 83       	std	Y+1, r24	; 0x01
 23e:	89 81       	ldd	r24, Y+1	; 0x01
 240:	9a 81       	ldd	r25, Y+2	; 0x02
 242:	81 30       	cpi	r24, 0x01	; 1
 244:	91 05       	cpc	r25, r1
 246:	c1 f0       	breq	.+48     	; 0x278 <magSense_task+0x48>
 248:	82 30       	cpi	r24, 0x02	; 2
 24a:	91 05       	cpc	r25, r1
 24c:	d1 f0       	breq	.+52     	; 0x282 <magSense_task+0x52>
 24e:	89 2b       	or	r24, r25
 250:	e9 f4       	brne	.+58     	; 0x28c <magSense_task+0x5c>
 252:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <BR.1650>
 256:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <BR.1650>
 25a:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <BL.1649>
 25e:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <BL.1649>
 262:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <TR.1648>
 266:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <TR.1648>
 26a:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <TL.1647>
 26e:	81 e0       	ldi	r24, 0x01	; 1
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	9a 83       	std	Y+2, r25	; 0x02
 274:	89 83       	std	Y+1, r24	; 0x01
 276:	0d c0       	rjmp	.+26     	; 0x292 <magSense_task+0x62>
 278:	81 e0       	ldi	r24, 0x01	; 1
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	9a 83       	std	Y+2, r25	; 0x02
 27e:	89 83       	std	Y+1, r24	; 0x01
 280:	08 c0       	rjmp	.+16     	; 0x292 <magSense_task+0x62>
 282:	82 e0       	ldi	r24, 0x02	; 2
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	9a 83       	std	Y+2, r25	; 0x02
 288:	89 83       	std	Y+1, r24	; 0x01
 28a:	03 c0       	rjmp	.+6      	; 0x292 <magSense_task+0x62>
 28c:	1a 82       	std	Y+2, r1	; 0x02
 28e:	19 82       	std	Y+1, r1	; 0x01
 290:	00 00       	nop
 292:	89 81       	ldd	r24, Y+1	; 0x01
 294:	9a 81       	ldd	r25, Y+2	; 0x02
 296:	81 30       	cpi	r24, 0x01	; 1
 298:	91 05       	cpc	r25, r1
 29a:	41 f0       	breq	.+16     	; 0x2ac <magSense_task+0x7c>
 29c:	82 30       	cpi	r24, 0x02	; 2
 29e:	91 05       	cpc	r25, r1
 2a0:	09 f4       	brne	.+2      	; 0x2a4 <magSense_task+0x74>
 2a2:	bd c0       	rjmp	.+378    	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 2a4:	89 2b       	or	r24, r25
 2a6:	09 f4       	brne	.+2      	; 0x2aa <magSense_task+0x7a>
 2a8:	c2 c0       	rjmp	.+388    	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 2aa:	be c0       	rjmp	.+380    	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 2ac:	83 e2       	ldi	r24, 0x23	; 35
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	fc 01       	movw	r30, r24
 2b2:	80 81       	ld	r24, Z
 2b4:	88 2f       	mov	r24, r24
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	82 70       	andi	r24, 0x02	; 2
 2ba:	99 27       	eor	r25, r25
 2bc:	89 2b       	or	r24, r25
 2be:	11 f4       	brne	.+4      	; 0x2c4 <magSense_task+0x94>
 2c0:	8a e0       	ldi	r24, 0x0A	; 10
 2c2:	01 c0       	rjmp	.+2      	; 0x2c6 <magSense_task+0x96>
 2c4:	80 e0       	ldi	r24, 0x00	; 0
 2c6:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <TL.1647>
 2ca:	83 e2       	ldi	r24, 0x23	; 35
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	fc 01       	movw	r30, r24
 2d0:	80 81       	ld	r24, Z
 2d2:	88 2f       	mov	r24, r24
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	84 70       	andi	r24, 0x04	; 4
 2d8:	99 27       	eor	r25, r25
 2da:	89 2b       	or	r24, r25
 2dc:	11 f4       	brne	.+4      	; 0x2e2 <magSense_task+0xb2>
 2de:	89 e0       	ldi	r24, 0x09	; 9
 2e0:	01 c0       	rjmp	.+2      	; 0x2e4 <magSense_task+0xb4>
 2e2:	80 e0       	ldi	r24, 0x00	; 0
 2e4:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <TR.1648>
 2e8:	83 e2       	ldi	r24, 0x23	; 35
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	fc 01       	movw	r30, r24
 2ee:	80 81       	ld	r24, Z
 2f0:	88 2f       	mov	r24, r24
 2f2:	90 e0       	ldi	r25, 0x00	; 0
 2f4:	88 70       	andi	r24, 0x08	; 8
 2f6:	99 27       	eor	r25, r25
 2f8:	89 2b       	or	r24, r25
 2fa:	11 f4       	brne	.+4      	; 0x300 <magSense_task+0xd0>
 2fc:	86 e0       	ldi	r24, 0x06	; 6
 2fe:	01 c0       	rjmp	.+2      	; 0x302 <magSense_task+0xd2>
 300:	80 e0       	ldi	r24, 0x00	; 0
 302:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <BL.1649>
 306:	83 e2       	ldi	r24, 0x23	; 35
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	fc 01       	movw	r30, r24
 30c:	80 81       	ld	r24, Z
 30e:	88 2f       	mov	r24, r24
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	80 71       	andi	r24, 0x10	; 16
 314:	99 27       	eor	r25, r25
 316:	89 2b       	or	r24, r25
 318:	11 f4       	brne	.+4      	; 0x31e <magSense_task+0xee>
 31a:	85 e0       	ldi	r24, 0x05	; 5
 31c:	01 c0       	rjmp	.+2      	; 0x320 <magSense_task+0xf0>
 31e:	80 e0       	ldi	r24, 0x00	; 0
 320:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <BR.1650>
 324:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <compass2>
 328:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <compass1>
 32c:	90 91 12 01 	lds	r25, 0x0112	; 0x800112 <TL.1647>
 330:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <TR.1648>
 334:	98 2b       	or	r25, r24
 336:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <BL.1649>
 33a:	98 2b       	or	r25, r24
 33c:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <BR.1650>
 340:	89 2b       	or	r24, r25
 342:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <compass2>
 346:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <compass2>
 34a:	88 23       	and	r24, r24
 34c:	09 f4       	brne	.+2      	; 0x350 <magSense_task+0x120>
 34e:	64 c0       	rjmp	.+200    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 350:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <compass2>
 354:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <compass1>
 358:	98 17       	cp	r25, r24
 35a:	09 f4       	brne	.+2      	; 0x35e <magSense_task+0x12e>
 35c:	5d c0       	rjmp	.+186    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 35e:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <compass1>
 362:	88 23       	and	r24, r24
 364:	09 f4       	brne	.+2      	; 0x368 <magSense_task+0x138>
 366:	58 c0       	rjmp	.+176    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 368:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <compass1>
 36c:	88 2f       	mov	r24, r24
 36e:	90 e0       	ldi	r25, 0x00	; 0
 370:	88 70       	andi	r24, 0x08	; 8
 372:	99 27       	eor	r25, r25
 374:	89 2b       	or	r24, r25
 376:	61 f0       	breq	.+24     	; 0x390 <magSense_task+0x160>
 378:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <compass2>
 37c:	88 2f       	mov	r24, r24
 37e:	90 e0       	ldi	r25, 0x00	; 0
 380:	88 70       	andi	r24, 0x08	; 8
 382:	99 27       	eor	r25, r25
 384:	89 2b       	or	r24, r25
 386:	21 f0       	breq	.+8      	; 0x390 <magSense_task+0x160>
 388:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <compass2>
 38c:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <compass2>
 390:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <compass1>
 394:	88 2f       	mov	r24, r24
 396:	90 e0       	ldi	r25, 0x00	; 0
 398:	84 70       	andi	r24, 0x04	; 4
 39a:	99 27       	eor	r25, r25
 39c:	89 2b       	or	r24, r25
 39e:	69 f0       	breq	.+26     	; 0x3ba <magSense_task+0x18a>
 3a0:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <compass2>
 3a4:	88 2f       	mov	r24, r24
 3a6:	90 e0       	ldi	r25, 0x00	; 0
 3a8:	84 70       	andi	r24, 0x04	; 4
 3aa:	99 27       	eor	r25, r25
 3ac:	89 2b       	or	r24, r25
 3ae:	29 f0       	breq	.+10     	; 0x3ba <magSense_task+0x18a>
 3b0:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <compass2>
 3b4:	8f 7e       	andi	r24, 0xEF	; 239
 3b6:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <compass2>
 3ba:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <compass1>
 3be:	88 2f       	mov	r24, r24
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	82 70       	andi	r24, 0x02	; 2
 3c4:	99 27       	eor	r25, r25
 3c6:	89 2b       	or	r24, r25
 3c8:	69 f0       	breq	.+26     	; 0x3e4 <magSense_task+0x1b4>
 3ca:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <compass2>
 3ce:	88 2f       	mov	r24, r24
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	82 70       	andi	r24, 0x02	; 2
 3d4:	99 27       	eor	r25, r25
 3d6:	89 2b       	or	r24, r25
 3d8:	29 f0       	breq	.+10     	; 0x3e4 <magSense_task+0x1b4>
 3da:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <compass2>
 3de:	8b 7f       	andi	r24, 0xFB	; 251
 3e0:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <compass2>
 3e4:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <compass1>
 3e8:	88 2f       	mov	r24, r24
 3ea:	90 e0       	ldi	r25, 0x00	; 0
 3ec:	81 70       	andi	r24, 0x01	; 1
 3ee:	99 27       	eor	r25, r25
 3f0:	89 2b       	or	r24, r25
 3f2:	69 f0       	breq	.+26     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3f4:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <compass2>
 3f8:	88 2f       	mov	r24, r24
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	81 70       	andi	r24, 0x01	; 1
 3fe:	99 27       	eor	r25, r25
 400:	89 2b       	or	r24, r25
 402:	29 f0       	breq	.+10     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 404:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <compass2>
 408:	8d 7f       	andi	r24, 0xFD	; 253
 40a:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <compass2>
 40e:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <compass2>
 412:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <direction>
 416:	0c c0       	rjmp	.+24     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 418:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <direction>
 41c:	09 c0       	rjmp	.+18     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 41e:	82 e0       	ldi	r24, 0x02	; 2
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	9a 83       	std	Y+2, r25	; 0x02
 424:	89 83       	std	Y+1, r24	; 0x01
 426:	04 c0       	rjmp	.+8      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 428:	1a 82       	std	Y+2, r1	; 0x02
 42a:	19 82       	std	Y+1, r1	; 0x01
 42c:	01 c0       	rjmp	.+2      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 42e:	00 00       	nop
 430:	89 81       	ldd	r24, Y+1	; 0x01
 432:	9a 81       	ldd	r25, Y+2	; 0x02
 434:	0f 90       	pop	r0
 436:	0f 90       	pop	r0
 438:	df 91       	pop	r29
 43a:	cf 91       	pop	r28
 43c:	08 95       	ret

0000043e <TimerISR>:
 43e:	0f 93       	push	r16
 440:	1f 93       	push	r17
 442:	cf 93       	push	r28
 444:	df 93       	push	r29
 446:	cd b7       	in	r28, 0x3d	; 61
 448:	de b7       	in	r29, 0x3e	; 62
 44a:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <i.1674>
 44e:	be c0       	rjmp	.+380    	; 0x5cc <TimerISR+0x18e>
 450:	20 91 15 01 	lds	r18, 0x0115	; 0x800115 <tasks>
 454:	30 91 16 01 	lds	r19, 0x0116	; 0x800116 <tasks+0x1>
 458:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <i.1674>
 45c:	48 2f       	mov	r20, r24
 45e:	50 e0       	ldi	r21, 0x00	; 0
 460:	6b e0       	ldi	r22, 0x0B	; 11
 462:	64 9f       	mul	r22, r20
 464:	c0 01       	movw	r24, r0
 466:	65 9f       	mul	r22, r21
 468:	90 0d       	add	r25, r0
 46a:	11 24       	eor	r1, r1
 46c:	82 0f       	add	r24, r18
 46e:	93 1f       	adc	r25, r19
 470:	fc 01       	movw	r30, r24
 472:	25 81       	ldd	r18, Z+5	; 0x05
 474:	36 81       	ldd	r19, Z+6	; 0x06
 476:	47 81       	ldd	r20, Z+7	; 0x07
 478:	50 85       	ldd	r21, Z+8	; 0x08
 47a:	60 91 15 01 	lds	r22, 0x0115	; 0x800115 <tasks>
 47e:	70 91 16 01 	lds	r23, 0x0116	; 0x800116 <tasks+0x1>
 482:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <i.1674>
 486:	e8 2f       	mov	r30, r24
 488:	f0 e0       	ldi	r31, 0x00	; 0
 48a:	ab e0       	ldi	r26, 0x0B	; 11
 48c:	ae 9f       	mul	r26, r30
 48e:	c0 01       	movw	r24, r0
 490:	af 9f       	mul	r26, r31
 492:	90 0d       	add	r25, r0
 494:	11 24       	eor	r1, r1
 496:	86 0f       	add	r24, r22
 498:	97 1f       	adc	r25, r23
 49a:	fc 01       	movw	r30, r24
 49c:	81 81       	ldd	r24, Z+1	; 0x01
 49e:	92 81       	ldd	r25, Z+2	; 0x02
 4a0:	a3 81       	ldd	r26, Z+3	; 0x03
 4a2:	b4 81       	ldd	r27, Z+4	; 0x04
 4a4:	28 17       	cp	r18, r24
 4a6:	39 07       	cpc	r19, r25
 4a8:	4a 07       	cpc	r20, r26
 4aa:	5b 07       	cpc	r21, r27
 4ac:	08 f4       	brcc	.+2      	; 0x4b0 <TimerISR+0x72>
 4ae:	52 c0       	rjmp	.+164    	; 0x554 <TimerISR+0x116>
 4b0:	20 91 15 01 	lds	r18, 0x0115	; 0x800115 <tasks>
 4b4:	30 91 16 01 	lds	r19, 0x0116	; 0x800116 <tasks+0x1>
 4b8:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <i.1674>
 4bc:	48 2f       	mov	r20, r24
 4be:	50 e0       	ldi	r21, 0x00	; 0
 4c0:	6b e0       	ldi	r22, 0x0B	; 11
 4c2:	64 9f       	mul	r22, r20
 4c4:	c0 01       	movw	r24, r0
 4c6:	65 9f       	mul	r22, r21
 4c8:	90 0d       	add	r25, r0
 4ca:	11 24       	eor	r1, r1
 4cc:	89 01       	movw	r16, r18
 4ce:	08 0f       	add	r16, r24
 4d0:	19 1f       	adc	r17, r25
 4d2:	20 91 15 01 	lds	r18, 0x0115	; 0x800115 <tasks>
 4d6:	30 91 16 01 	lds	r19, 0x0116	; 0x800116 <tasks+0x1>
 4da:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <i.1674>
 4de:	48 2f       	mov	r20, r24
 4e0:	50 e0       	ldi	r21, 0x00	; 0
 4e2:	6b e0       	ldi	r22, 0x0B	; 11
 4e4:	64 9f       	mul	r22, r20
 4e6:	c0 01       	movw	r24, r0
 4e8:	65 9f       	mul	r22, r21
 4ea:	90 0d       	add	r25, r0
 4ec:	11 24       	eor	r1, r1
 4ee:	82 0f       	add	r24, r18
 4f0:	93 1f       	adc	r25, r19
 4f2:	fc 01       	movw	r30, r24
 4f4:	21 85       	ldd	r18, Z+9	; 0x09
 4f6:	32 85       	ldd	r19, Z+10	; 0x0a
 4f8:	40 91 15 01 	lds	r20, 0x0115	; 0x800115 <tasks>
 4fc:	50 91 16 01 	lds	r21, 0x0116	; 0x800116 <tasks+0x1>
 500:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <i.1674>
 504:	68 2f       	mov	r22, r24
 506:	70 e0       	ldi	r23, 0x00	; 0
 508:	eb e0       	ldi	r30, 0x0B	; 11
 50a:	e6 9f       	mul	r30, r22
 50c:	c0 01       	movw	r24, r0
 50e:	e7 9f       	mul	r30, r23
 510:	90 0d       	add	r25, r0
 512:	11 24       	eor	r1, r1
 514:	84 0f       	add	r24, r20
 516:	95 1f       	adc	r25, r21
 518:	fc 01       	movw	r30, r24
 51a:	80 81       	ld	r24, Z
 51c:	08 2e       	mov	r0, r24
 51e:	00 0c       	add	r0, r0
 520:	99 0b       	sbc	r25, r25
 522:	f9 01       	movw	r30, r18
 524:	09 95       	icall
 526:	f8 01       	movw	r30, r16
 528:	80 83       	st	Z, r24
 52a:	20 91 15 01 	lds	r18, 0x0115	; 0x800115 <tasks>
 52e:	30 91 16 01 	lds	r19, 0x0116	; 0x800116 <tasks+0x1>
 532:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <i.1674>
 536:	48 2f       	mov	r20, r24
 538:	50 e0       	ldi	r21, 0x00	; 0
 53a:	6b e0       	ldi	r22, 0x0B	; 11
 53c:	64 9f       	mul	r22, r20
 53e:	c0 01       	movw	r24, r0
 540:	65 9f       	mul	r22, r21
 542:	90 0d       	add	r25, r0
 544:	11 24       	eor	r1, r1
 546:	82 0f       	add	r24, r18
 548:	93 1f       	adc	r25, r19
 54a:	fc 01       	movw	r30, r24
 54c:	15 82       	std	Z+5, r1	; 0x05
 54e:	16 82       	std	Z+6, r1	; 0x06
 550:	17 82       	std	Z+7, r1	; 0x07
 552:	10 86       	std	Z+8, r1	; 0x08
 554:	20 91 15 01 	lds	r18, 0x0115	; 0x800115 <tasks>
 558:	30 91 16 01 	lds	r19, 0x0116	; 0x800116 <tasks+0x1>
 55c:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <i.1674>
 560:	48 2f       	mov	r20, r24
 562:	50 e0       	ldi	r21, 0x00	; 0
 564:	6b e0       	ldi	r22, 0x0B	; 11
 566:	64 9f       	mul	r22, r20
 568:	c0 01       	movw	r24, r0
 56a:	65 9f       	mul	r22, r21
 56c:	90 0d       	add	r25, r0
 56e:	11 24       	eor	r1, r1
 570:	b9 01       	movw	r22, r18
 572:	68 0f       	add	r22, r24
 574:	79 1f       	adc	r23, r25
 576:	20 91 15 01 	lds	r18, 0x0115	; 0x800115 <tasks>
 57a:	30 91 16 01 	lds	r19, 0x0116	; 0x800116 <tasks+0x1>
 57e:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <i.1674>
 582:	48 2f       	mov	r20, r24
 584:	50 e0       	ldi	r21, 0x00	; 0
 586:	eb e0       	ldi	r30, 0x0B	; 11
 588:	e4 9f       	mul	r30, r20
 58a:	c0 01       	movw	r24, r0
 58c:	e5 9f       	mul	r30, r21
 58e:	90 0d       	add	r25, r0
 590:	11 24       	eor	r1, r1
 592:	82 0f       	add	r24, r18
 594:	93 1f       	adc	r25, r19
 596:	fc 01       	movw	r30, r24
 598:	25 81       	ldd	r18, Z+5	; 0x05
 59a:	36 81       	ldd	r19, Z+6	; 0x06
 59c:	47 81       	ldd	r20, Z+7	; 0x07
 59e:	50 85       	ldd	r21, Z+8	; 0x08
 5a0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 5a4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 5a8:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 5ac:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 5b0:	82 0f       	add	r24, r18
 5b2:	93 1f       	adc	r25, r19
 5b4:	a4 1f       	adc	r26, r20
 5b6:	b5 1f       	adc	r27, r21
 5b8:	fb 01       	movw	r30, r22
 5ba:	85 83       	std	Z+5, r24	; 0x05
 5bc:	96 83       	std	Z+6, r25	; 0x06
 5be:	a7 83       	std	Z+7, r26	; 0x07
 5c0:	b0 87       	std	Z+8, r27	; 0x08
 5c2:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <i.1674>
 5c6:	8f 5f       	subi	r24, 0xFF	; 255
 5c8:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <i.1674>
 5cc:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <i.1674>
 5d0:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <tasksNum>
 5d4:	98 17       	cp	r25, r24
 5d6:	08 f4       	brcc	.+2      	; 0x5da <TimerISR+0x19c>
 5d8:	3b cf       	rjmp	.-394    	; 0x450 <TimerISR+0x12>
 5da:	00 00       	nop
 5dc:	df 91       	pop	r29
 5de:	cf 91       	pop	r28
 5e0:	1f 91       	pop	r17
 5e2:	0f 91       	pop	r16
 5e4:	08 95       	ret

000005e6 <__vector_13>:
 5e6:	1f 92       	push	r1
 5e8:	0f 92       	push	r0
 5ea:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 5ee:	0f 92       	push	r0
 5f0:	11 24       	eor	r1, r1
 5f2:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
 5f6:	0f 92       	push	r0
 5f8:	2f 93       	push	r18
 5fa:	3f 93       	push	r19
 5fc:	4f 93       	push	r20
 5fe:	5f 93       	push	r21
 600:	6f 93       	push	r22
 602:	7f 93       	push	r23
 604:	8f 93       	push	r24
 606:	9f 93       	push	r25
 608:	af 93       	push	r26
 60a:	bf 93       	push	r27
 60c:	ef 93       	push	r30
 60e:	ff 93       	push	r31
 610:	cf 93       	push	r28
 612:	df 93       	push	r29
 614:	cd b7       	in	r28, 0x3d	; 61
 616:	de b7       	in	r29, 0x3e	; 62
 618:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <tasksPeriodCntDown>
 61c:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <tasksPeriodCntDown+0x1>
 620:	a0 91 0b 01 	lds	r26, 0x010B	; 0x80010b <tasksPeriodCntDown+0x2>
 624:	b0 91 0c 01 	lds	r27, 0x010C	; 0x80010c <tasksPeriodCntDown+0x3>
 628:	01 97       	sbiw	r24, 0x01	; 1
 62a:	a1 09       	sbc	r26, r1
 62c:	b1 09       	sbc	r27, r1
 62e:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <tasksPeriodCntDown>
 632:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <tasksPeriodCntDown+0x1>
 636:	a0 93 0b 01 	sts	0x010B, r26	; 0x80010b <tasksPeriodCntDown+0x2>
 63a:	b0 93 0c 01 	sts	0x010C, r27	; 0x80010c <tasksPeriodCntDown+0x3>
 63e:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <tasksPeriodCntDown>
 642:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <tasksPeriodCntDown+0x1>
 646:	a0 91 0b 01 	lds	r26, 0x010B	; 0x80010b <tasksPeriodCntDown+0x2>
 64a:	b0 91 0c 01 	lds	r27, 0x010C	; 0x80010c <tasksPeriodCntDown+0x3>
 64e:	89 2b       	or	r24, r25
 650:	8a 2b       	or	r24, r26
 652:	8b 2b       	or	r24, r27
 654:	89 f4       	brne	.+34     	; 0x678 <__vector_13+0x92>
 656:	f3 de       	rcall	.-538    	; 0x43e <TimerISR>
 658:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 65c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 660:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 664:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 668:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <tasksPeriodCntDown>
 66c:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <tasksPeriodCntDown+0x1>
 670:	a0 93 0b 01 	sts	0x010B, r26	; 0x80010b <tasksPeriodCntDown+0x2>
 674:	b0 93 0c 01 	sts	0x010C, r27	; 0x80010c <tasksPeriodCntDown+0x3>
 678:	00 00       	nop
 67a:	df 91       	pop	r29
 67c:	cf 91       	pop	r28
 67e:	ff 91       	pop	r31
 680:	ef 91       	pop	r30
 682:	bf 91       	pop	r27
 684:	af 91       	pop	r26
 686:	9f 91       	pop	r25
 688:	8f 91       	pop	r24
 68a:	7f 91       	pop	r23
 68c:	6f 91       	pop	r22
 68e:	5f 91       	pop	r21
 690:	4f 91       	pop	r20
 692:	3f 91       	pop	r19
 694:	2f 91       	pop	r18
 696:	0f 90       	pop	r0
 698:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
 69c:	0f 90       	pop	r0
 69e:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 6a2:	0f 90       	pop	r0
 6a4:	1f 90       	pop	r1
 6a6:	18 95       	reti

000006a8 <TimerSet>:
 6a8:	cf 93       	push	r28
 6aa:	df 93       	push	r29
 6ac:	00 d0       	rcall	.+0      	; 0x6ae <TimerSet+0x6>
 6ae:	00 d0       	rcall	.+0      	; 0x6b0 <TimerSet+0x8>
 6b0:	cd b7       	in	r28, 0x3d	; 61
 6b2:	de b7       	in	r29, 0x3e	; 62
 6b4:	69 83       	std	Y+1, r22	; 0x01
 6b6:	7a 83       	std	Y+2, r23	; 0x02
 6b8:	8b 83       	std	Y+3, r24	; 0x03
 6ba:	9c 83       	std	Y+4, r25	; 0x04
 6bc:	89 81       	ldd	r24, Y+1	; 0x01
 6be:	9a 81       	ldd	r25, Y+2	; 0x02
 6c0:	ab 81       	ldd	r26, Y+3	; 0x03
 6c2:	bc 81       	ldd	r27, Y+4	; 0x04
 6c4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 6c8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 6cc:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 6d0:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 6d4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 6d8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 6dc:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 6e0:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 6e4:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <tasksPeriodCntDown>
 6e8:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <tasksPeriodCntDown+0x1>
 6ec:	a0 93 0b 01 	sts	0x010B, r26	; 0x80010b <tasksPeriodCntDown+0x2>
 6f0:	b0 93 0c 01 	sts	0x010C, r27	; 0x80010c <tasksPeriodCntDown+0x3>
 6f4:	00 00       	nop
 6f6:	0f 90       	pop	r0
 6f8:	0f 90       	pop	r0
 6fa:	0f 90       	pop	r0
 6fc:	0f 90       	pop	r0
 6fe:	df 91       	pop	r29
 700:	cf 91       	pop	r28
 702:	08 95       	ret

00000704 <TimerOn>:
 704:	cf 93       	push	r28
 706:	df 93       	push	r29
 708:	cd b7       	in	r28, 0x3d	; 61
 70a:	de b7       	in	r29, 0x3e	; 62
 70c:	81 e8       	ldi	r24, 0x81	; 129
 70e:	90 e0       	ldi	r25, 0x00	; 0
 710:	2b e0       	ldi	r18, 0x0B	; 11
 712:	fc 01       	movw	r30, r24
 714:	20 83       	st	Z, r18
 716:	88 e8       	ldi	r24, 0x88	; 136
 718:	90 e0       	ldi	r25, 0x00	; 0
 71a:	2d e7       	ldi	r18, 0x7D	; 125
 71c:	30 e0       	ldi	r19, 0x00	; 0
 71e:	fc 01       	movw	r30, r24
 720:	31 83       	std	Z+1, r19	; 0x01
 722:	20 83       	st	Z, r18
 724:	8f e6       	ldi	r24, 0x6F	; 111
 726:	90 e0       	ldi	r25, 0x00	; 0
 728:	22 e0       	ldi	r18, 0x02	; 2
 72a:	fc 01       	movw	r30, r24
 72c:	20 83       	st	Z, r18
 72e:	84 e8       	ldi	r24, 0x84	; 132
 730:	90 e0       	ldi	r25, 0x00	; 0
 732:	fc 01       	movw	r30, r24
 734:	11 82       	std	Z+1, r1	; 0x01
 736:	10 82       	st	Z, r1
 738:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 73c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 740:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 744:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 748:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <tasksPeriodCntDown>
 74c:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <tasksPeriodCntDown+0x1>
 750:	a0 93 0b 01 	sts	0x010B, r26	; 0x80010b <tasksPeriodCntDown+0x2>
 754:	b0 93 0c 01 	sts	0x010C, r27	; 0x80010c <tasksPeriodCntDown+0x3>
 758:	8f e5       	ldi	r24, 0x5F	; 95
 75a:	90 e0       	ldi	r25, 0x00	; 0
 75c:	2f e5       	ldi	r18, 0x5F	; 95
 75e:	30 e0       	ldi	r19, 0x00	; 0
 760:	f9 01       	movw	r30, r18
 762:	20 81       	ld	r18, Z
 764:	20 68       	ori	r18, 0x80	; 128
 766:	fc 01       	movw	r30, r24
 768:	20 83       	st	Z, r18
 76a:	00 00       	nop
 76c:	df 91       	pop	r29
 76e:	cf 91       	pop	r28
 770:	08 95       	ret

00000772 <B1_task>:
 772:	cf 93       	push	r28
 774:	df 93       	push	r29
 776:	00 d0       	rcall	.+0      	; 0x778 <B1_task+0x6>
 778:	cd b7       	in	r28, 0x3d	; 61
 77a:	de b7       	in	r29, 0x3e	; 62
 77c:	9a 83       	std	Y+2, r25	; 0x02
 77e:	89 83       	std	Y+1, r24	; 0x01
 780:	89 81       	ldd	r24, Y+1	; 0x01
 782:	9a 81       	ldd	r25, Y+2	; 0x02
 784:	81 30       	cpi	r24, 0x01	; 1
 786:	91 05       	cpc	r25, r1
 788:	51 f0       	breq	.+20     	; 0x79e <B1_task+0x2c>
 78a:	82 30       	cpi	r24, 0x02	; 2
 78c:	91 05       	cpc	r25, r1
 78e:	d9 f0       	breq	.+54     	; 0x7c6 <B1_task+0x54>
 790:	89 2b       	or	r24, r25
 792:	69 f5       	brne	.+90     	; 0x7ee <B1_task+0x7c>
 794:	81 e0       	ldi	r24, 0x01	; 1
 796:	90 e0       	ldi	r25, 0x00	; 0
 798:	9a 83       	std	Y+2, r25	; 0x02
 79a:	89 83       	std	Y+1, r24	; 0x01
 79c:	2b c0       	rjmp	.+86     	; 0x7f4 <B1_task+0x82>
 79e:	83 e2       	ldi	r24, 0x23	; 35
 7a0:	90 e0       	ldi	r25, 0x00	; 0
 7a2:	fc 01       	movw	r30, r24
 7a4:	80 81       	ld	r24, Z
 7a6:	88 2f       	mov	r24, r24
 7a8:	90 e0       	ldi	r25, 0x00	; 0
 7aa:	80 72       	andi	r24, 0x20	; 32
 7ac:	99 27       	eor	r25, r25
 7ae:	89 2b       	or	r24, r25
 7b0:	29 f4       	brne	.+10     	; 0x7bc <B1_task+0x4a>
 7b2:	82 e0       	ldi	r24, 0x02	; 2
 7b4:	90 e0       	ldi	r25, 0x00	; 0
 7b6:	9a 83       	std	Y+2, r25	; 0x02
 7b8:	89 83       	std	Y+1, r24	; 0x01
 7ba:	1c c0       	rjmp	.+56     	; 0x7f4 <B1_task+0x82>
 7bc:	81 e0       	ldi	r24, 0x01	; 1
 7be:	90 e0       	ldi	r25, 0x00	; 0
 7c0:	9a 83       	std	Y+2, r25	; 0x02
 7c2:	89 83       	std	Y+1, r24	; 0x01
 7c4:	17 c0       	rjmp	.+46     	; 0x7f4 <B1_task+0x82>
 7c6:	83 e2       	ldi	r24, 0x23	; 35
 7c8:	90 e0       	ldi	r25, 0x00	; 0
 7ca:	fc 01       	movw	r30, r24
 7cc:	80 81       	ld	r24, Z
 7ce:	88 2f       	mov	r24, r24
 7d0:	90 e0       	ldi	r25, 0x00	; 0
 7d2:	80 72       	andi	r24, 0x20	; 32
 7d4:	99 27       	eor	r25, r25
 7d6:	89 2b       	or	r24, r25
 7d8:	29 f0       	breq	.+10     	; 0x7e4 <B1_task+0x72>
 7da:	81 e0       	ldi	r24, 0x01	; 1
 7dc:	90 e0       	ldi	r25, 0x00	; 0
 7de:	9a 83       	std	Y+2, r25	; 0x02
 7e0:	89 83       	std	Y+1, r24	; 0x01
 7e2:	08 c0       	rjmp	.+16     	; 0x7f4 <B1_task+0x82>
 7e4:	82 e0       	ldi	r24, 0x02	; 2
 7e6:	90 e0       	ldi	r25, 0x00	; 0
 7e8:	9a 83       	std	Y+2, r25	; 0x02
 7ea:	89 83       	std	Y+1, r24	; 0x01
 7ec:	03 c0       	rjmp	.+6      	; 0x7f4 <B1_task+0x82>
 7ee:	1a 82       	std	Y+2, r1	; 0x02
 7f0:	19 82       	std	Y+1, r1	; 0x01
 7f2:	00 00       	nop
 7f4:	89 81       	ldd	r24, Y+1	; 0x01
 7f6:	9a 81       	ldd	r25, Y+2	; 0x02
 7f8:	81 30       	cpi	r24, 0x01	; 1
 7fa:	91 05       	cpc	r25, r1
 7fc:	31 f0       	breq	.+12     	; 0x80a <B1_task+0x98>
 7fe:	82 30       	cpi	r24, 0x02	; 2
 800:	91 05       	cpc	r25, r1
 802:	49 f0       	breq	.+18     	; 0x816 <B1_task+0xa4>
 804:	89 2b       	or	r24, r25
 806:	69 f0       	breq	.+26     	; 0x822 <B1_task+0xb0>
 808:	0d c0       	rjmp	.+26     	; 0x824 <B1_task+0xb2>
 80a:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <buttons>
 80e:	8e 7f       	andi	r24, 0xFE	; 254
 810:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <buttons>
 814:	07 c0       	rjmp	.+14     	; 0x824 <B1_task+0xb2>
 816:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <buttons>
 81a:	81 60       	ori	r24, 0x01	; 1
 81c:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <buttons>
 820:	01 c0       	rjmp	.+2      	; 0x824 <B1_task+0xb2>
 822:	00 00       	nop
 824:	89 81       	ldd	r24, Y+1	; 0x01
 826:	9a 81       	ldd	r25, Y+2	; 0x02
 828:	0f 90       	pop	r0
 82a:	0f 90       	pop	r0
 82c:	df 91       	pop	r29
 82e:	cf 91       	pop	r28
 830:	08 95       	ret

00000832 <B2_task>:
 832:	cf 93       	push	r28
 834:	df 93       	push	r29
 836:	00 d0       	rcall	.+0      	; 0x838 <B2_task+0x6>
 838:	cd b7       	in	r28, 0x3d	; 61
 83a:	de b7       	in	r29, 0x3e	; 62
 83c:	9a 83       	std	Y+2, r25	; 0x02
 83e:	89 83       	std	Y+1, r24	; 0x01
 840:	89 81       	ldd	r24, Y+1	; 0x01
 842:	9a 81       	ldd	r25, Y+2	; 0x02
 844:	81 30       	cpi	r24, 0x01	; 1
 846:	91 05       	cpc	r25, r1
 848:	51 f0       	breq	.+20     	; 0x85e <B2_task+0x2c>
 84a:	82 30       	cpi	r24, 0x02	; 2
 84c:	91 05       	cpc	r25, r1
 84e:	d9 f0       	breq	.+54     	; 0x886 <B2_task+0x54>
 850:	89 2b       	or	r24, r25
 852:	69 f5       	brne	.+90     	; 0x8ae <B2_task+0x7c>
 854:	81 e0       	ldi	r24, 0x01	; 1
 856:	90 e0       	ldi	r25, 0x00	; 0
 858:	9a 83       	std	Y+2, r25	; 0x02
 85a:	89 83       	std	Y+1, r24	; 0x01
 85c:	2b c0       	rjmp	.+86     	; 0x8b4 <B2_task+0x82>
 85e:	83 e2       	ldi	r24, 0x23	; 35
 860:	90 e0       	ldi	r25, 0x00	; 0
 862:	fc 01       	movw	r30, r24
 864:	80 81       	ld	r24, Z
 866:	88 2f       	mov	r24, r24
 868:	90 e0       	ldi	r25, 0x00	; 0
 86a:	80 74       	andi	r24, 0x40	; 64
 86c:	99 27       	eor	r25, r25
 86e:	89 2b       	or	r24, r25
 870:	29 f4       	brne	.+10     	; 0x87c <B2_task+0x4a>
 872:	82 e0       	ldi	r24, 0x02	; 2
 874:	90 e0       	ldi	r25, 0x00	; 0
 876:	9a 83       	std	Y+2, r25	; 0x02
 878:	89 83       	std	Y+1, r24	; 0x01
 87a:	1c c0       	rjmp	.+56     	; 0x8b4 <B2_task+0x82>
 87c:	81 e0       	ldi	r24, 0x01	; 1
 87e:	90 e0       	ldi	r25, 0x00	; 0
 880:	9a 83       	std	Y+2, r25	; 0x02
 882:	89 83       	std	Y+1, r24	; 0x01
 884:	17 c0       	rjmp	.+46     	; 0x8b4 <B2_task+0x82>
 886:	83 e2       	ldi	r24, 0x23	; 35
 888:	90 e0       	ldi	r25, 0x00	; 0
 88a:	fc 01       	movw	r30, r24
 88c:	80 81       	ld	r24, Z
 88e:	88 2f       	mov	r24, r24
 890:	90 e0       	ldi	r25, 0x00	; 0
 892:	80 74       	andi	r24, 0x40	; 64
 894:	99 27       	eor	r25, r25
 896:	89 2b       	or	r24, r25
 898:	29 f0       	breq	.+10     	; 0x8a4 <B2_task+0x72>
 89a:	81 e0       	ldi	r24, 0x01	; 1
 89c:	90 e0       	ldi	r25, 0x00	; 0
 89e:	9a 83       	std	Y+2, r25	; 0x02
 8a0:	89 83       	std	Y+1, r24	; 0x01
 8a2:	08 c0       	rjmp	.+16     	; 0x8b4 <B2_task+0x82>
 8a4:	82 e0       	ldi	r24, 0x02	; 2
 8a6:	90 e0       	ldi	r25, 0x00	; 0
 8a8:	9a 83       	std	Y+2, r25	; 0x02
 8aa:	89 83       	std	Y+1, r24	; 0x01
 8ac:	03 c0       	rjmp	.+6      	; 0x8b4 <B2_task+0x82>
 8ae:	1a 82       	std	Y+2, r1	; 0x02
 8b0:	19 82       	std	Y+1, r1	; 0x01
 8b2:	00 00       	nop
 8b4:	89 81       	ldd	r24, Y+1	; 0x01
 8b6:	9a 81       	ldd	r25, Y+2	; 0x02
 8b8:	81 30       	cpi	r24, 0x01	; 1
 8ba:	91 05       	cpc	r25, r1
 8bc:	31 f0       	breq	.+12     	; 0x8ca <B2_task+0x98>
 8be:	82 30       	cpi	r24, 0x02	; 2
 8c0:	91 05       	cpc	r25, r1
 8c2:	49 f0       	breq	.+18     	; 0x8d6 <B2_task+0xa4>
 8c4:	89 2b       	or	r24, r25
 8c6:	69 f0       	breq	.+26     	; 0x8e2 <B2_task+0xb0>
 8c8:	0d c0       	rjmp	.+26     	; 0x8e4 <B2_task+0xb2>
 8ca:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <buttons>
 8ce:	8d 7f       	andi	r24, 0xFD	; 253
 8d0:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <buttons>
 8d4:	07 c0       	rjmp	.+14     	; 0x8e4 <B2_task+0xb2>
 8d6:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <buttons>
 8da:	82 60       	ori	r24, 0x02	; 2
 8dc:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <buttons>
 8e0:	01 c0       	rjmp	.+2      	; 0x8e4 <B2_task+0xb2>
 8e2:	00 00       	nop
 8e4:	89 81       	ldd	r24, Y+1	; 0x01
 8e6:	9a 81       	ldd	r25, Y+2	; 0x02
 8e8:	0f 90       	pop	r0
 8ea:	0f 90       	pop	r0
 8ec:	df 91       	pop	r29
 8ee:	cf 91       	pop	r28
 8f0:	08 95       	ret

000008f2 <initUSART>:
 8f2:	cf 93       	push	r28
 8f4:	df 93       	push	r29
 8f6:	1f 92       	push	r1
 8f8:	cd b7       	in	r28, 0x3d	; 61
 8fa:	de b7       	in	r29, 0x3e	; 62
 8fc:	89 83       	std	Y+1, r24	; 0x01
 8fe:	89 81       	ldd	r24, Y+1	; 0x01
 900:	81 30       	cpi	r24, 0x01	; 1
 902:	e1 f0       	breq	.+56     	; 0x93c <initUSART+0x4a>
 904:	81 ec       	ldi	r24, 0xC1	; 193
 906:	90 e0       	ldi	r25, 0x00	; 0
 908:	21 ec       	ldi	r18, 0xC1	; 193
 90a:	30 e0       	ldi	r19, 0x00	; 0
 90c:	f9 01       	movw	r30, r18
 90e:	20 81       	ld	r18, Z
 910:	28 61       	ori	r18, 0x18	; 24
 912:	fc 01       	movw	r30, r24
 914:	20 83       	st	Z, r18
 916:	82 ec       	ldi	r24, 0xC2	; 194
 918:	90 e0       	ldi	r25, 0x00	; 0
 91a:	22 ec       	ldi	r18, 0xC2	; 194
 91c:	30 e0       	ldi	r19, 0x00	; 0
 91e:	f9 01       	movw	r30, r18
 920:	20 81       	ld	r18, Z
 922:	26 60       	ori	r18, 0x06	; 6
 924:	fc 01       	movw	r30, r24
 926:	20 83       	st	Z, r18
 928:	84 ec       	ldi	r24, 0xC4	; 196
 92a:	90 e0       	ldi	r25, 0x00	; 0
 92c:	23 e3       	ldi	r18, 0x33	; 51
 92e:	fc 01       	movw	r30, r24
 930:	20 83       	st	Z, r18
 932:	85 ec       	ldi	r24, 0xC5	; 197
 934:	90 e0       	ldi	r25, 0x00	; 0
 936:	fc 01       	movw	r30, r24
 938:	10 82       	st	Z, r1
 93a:	1b c0       	rjmp	.+54     	; 0x972 <initUSART+0x80>
 93c:	89 ec       	ldi	r24, 0xC9	; 201
 93e:	90 e0       	ldi	r25, 0x00	; 0
 940:	29 ec       	ldi	r18, 0xC9	; 201
 942:	30 e0       	ldi	r19, 0x00	; 0
 944:	f9 01       	movw	r30, r18
 946:	20 81       	ld	r18, Z
 948:	28 61       	ori	r18, 0x18	; 24
 94a:	fc 01       	movw	r30, r24
 94c:	20 83       	st	Z, r18
 94e:	8a ec       	ldi	r24, 0xCA	; 202
 950:	90 e0       	ldi	r25, 0x00	; 0
 952:	2a ec       	ldi	r18, 0xCA	; 202
 954:	30 e0       	ldi	r19, 0x00	; 0
 956:	f9 01       	movw	r30, r18
 958:	20 81       	ld	r18, Z
 95a:	26 60       	ori	r18, 0x06	; 6
 95c:	fc 01       	movw	r30, r24
 95e:	20 83       	st	Z, r18
 960:	8c ec       	ldi	r24, 0xCC	; 204
 962:	90 e0       	ldi	r25, 0x00	; 0
 964:	23 e3       	ldi	r18, 0x33	; 51
 966:	fc 01       	movw	r30, r24
 968:	20 83       	st	Z, r18
 96a:	8d ec       	ldi	r24, 0xCD	; 205
 96c:	90 e0       	ldi	r25, 0x00	; 0
 96e:	fc 01       	movw	r30, r24
 970:	10 82       	st	Z, r1
 972:	00 00       	nop
 974:	0f 90       	pop	r0
 976:	df 91       	pop	r29
 978:	cf 91       	pop	r28
 97a:	08 95       	ret

0000097c <USART_IsSendReady>:
 97c:	cf 93       	push	r28
 97e:	df 93       	push	r29
 980:	1f 92       	push	r1
 982:	cd b7       	in	r28, 0x3d	; 61
 984:	de b7       	in	r29, 0x3e	; 62
 986:	89 83       	std	Y+1, r24	; 0x01
 988:	89 81       	ldd	r24, Y+1	; 0x01
 98a:	81 30       	cpi	r24, 0x01	; 1
 98c:	31 f0       	breq	.+12     	; 0x99a <USART_IsSendReady+0x1e>
 98e:	80 ec       	ldi	r24, 0xC0	; 192
 990:	90 e0       	ldi	r25, 0x00	; 0
 992:	fc 01       	movw	r30, r24
 994:	80 81       	ld	r24, Z
 996:	80 72       	andi	r24, 0x20	; 32
 998:	05 c0       	rjmp	.+10     	; 0x9a4 <USART_IsSendReady+0x28>
 99a:	88 ec       	ldi	r24, 0xC8	; 200
 99c:	90 e0       	ldi	r25, 0x00	; 0
 99e:	fc 01       	movw	r30, r24
 9a0:	80 81       	ld	r24, Z
 9a2:	80 72       	andi	r24, 0x20	; 32
 9a4:	0f 90       	pop	r0
 9a6:	df 91       	pop	r29
 9a8:	cf 91       	pop	r28
 9aa:	08 95       	ret

000009ac <USART_Send>:
 9ac:	cf 93       	push	r28
 9ae:	df 93       	push	r29
 9b0:	00 d0       	rcall	.+0      	; 0x9b2 <USART_Send+0x6>
 9b2:	cd b7       	in	r28, 0x3d	; 61
 9b4:	de b7       	in	r29, 0x3e	; 62
 9b6:	89 83       	std	Y+1, r24	; 0x01
 9b8:	6a 83       	std	Y+2, r22	; 0x02
 9ba:	8a 81       	ldd	r24, Y+2	; 0x02
 9bc:	81 30       	cpi	r24, 0x01	; 1
 9be:	89 f0       	breq	.+34     	; 0x9e2 <USART_Send+0x36>
 9c0:	00 00       	nop
 9c2:	80 ec       	ldi	r24, 0xC0	; 192
 9c4:	90 e0       	ldi	r25, 0x00	; 0
 9c6:	fc 01       	movw	r30, r24
 9c8:	80 81       	ld	r24, Z
 9ca:	88 2f       	mov	r24, r24
 9cc:	90 e0       	ldi	r25, 0x00	; 0
 9ce:	80 72       	andi	r24, 0x20	; 32
 9d0:	99 27       	eor	r25, r25
 9d2:	89 2b       	or	r24, r25
 9d4:	b1 f3       	breq	.-20     	; 0x9c2 <USART_Send+0x16>
 9d6:	86 ec       	ldi	r24, 0xC6	; 198
 9d8:	90 e0       	ldi	r25, 0x00	; 0
 9da:	29 81       	ldd	r18, Y+1	; 0x01
 9dc:	fc 01       	movw	r30, r24
 9de:	20 83       	st	Z, r18
 9e0:	10 c0       	rjmp	.+32     	; 0xa02 <USART_Send+0x56>
 9e2:	00 00       	nop
 9e4:	88 ec       	ldi	r24, 0xC8	; 200
 9e6:	90 e0       	ldi	r25, 0x00	; 0
 9e8:	fc 01       	movw	r30, r24
 9ea:	80 81       	ld	r24, Z
 9ec:	88 2f       	mov	r24, r24
 9ee:	90 e0       	ldi	r25, 0x00	; 0
 9f0:	80 72       	andi	r24, 0x20	; 32
 9f2:	99 27       	eor	r25, r25
 9f4:	89 2b       	or	r24, r25
 9f6:	b1 f3       	breq	.-20     	; 0x9e4 <USART_Send+0x38>
 9f8:	8e ec       	ldi	r24, 0xCE	; 206
 9fa:	90 e0       	ldi	r25, 0x00	; 0
 9fc:	29 81       	ldd	r18, Y+1	; 0x01
 9fe:	fc 01       	movw	r30, r24
 a00:	20 83       	st	Z, r18
 a02:	00 00       	nop
 a04:	0f 90       	pop	r0
 a06:	0f 90       	pop	r0
 a08:	df 91       	pop	r29
 a0a:	cf 91       	pop	r28
 a0c:	08 95       	ret

00000a0e <tasks_task>:


enum TASKS{tasks_start, tasks_send, tasks_sleep} task_state;
	
int tasks_task(int state)
{
 a0e:	cf 93       	push	r28
 a10:	df 93       	push	r29
 a12:	00 d0       	rcall	.+0      	; 0xa14 <tasks_task+0x6>
 a14:	1f 92       	push	r1
 a16:	cd b7       	in	r28, 0x3d	; 61
 a18:	de b7       	in	r29, 0x3e	; 62
 a1a:	9b 83       	std	Y+3, r25	; 0x03
 a1c:	8a 83       	std	Y+2, r24	; 0x02
	static unsigned char tk; // counts to 5 seconds
	switch(state)
 a1e:	8a 81       	ldd	r24, Y+2	; 0x02
 a20:	9b 81       	ldd	r25, Y+3	; 0x03
 a22:	81 30       	cpi	r24, 0x01	; 1
 a24:	91 05       	cpc	r25, r1
 a26:	a1 f1       	breq	.+104    	; 0xa90 <tasks_task+0x82>
 a28:	82 30       	cpi	r24, 0x02	; 2
 a2a:	91 05       	cpc	r25, r1
 a2c:	09 f4       	brne	.+2      	; 0xa30 <tasks_task+0x22>
 a2e:	41 c0       	rjmp	.+130    	; 0xab2 <tasks_task+0xa4>
 a30:	89 2b       	or	r24, r25
 a32:	e1 f5       	brne	.+120    	; 0xaac <tasks_task+0x9e>
	{
		case tasks_start:			// initializes all ports
			DDRA = 0x00; PORTA = 0xff;
 a34:	81 e2       	ldi	r24, 0x21	; 33
 a36:	90 e0       	ldi	r25, 0x00	; 0
 a38:	fc 01       	movw	r30, r24
 a3a:	10 82       	st	Z, r1
 a3c:	82 e2       	ldi	r24, 0x22	; 34
 a3e:	90 e0       	ldi	r25, 0x00	; 0
 a40:	2f ef       	ldi	r18, 0xFF	; 255
 a42:	fc 01       	movw	r30, r24
 a44:	20 83       	st	Z, r18
			DDRB = 0x00; PORTB = 0xff;
 a46:	84 e2       	ldi	r24, 0x24	; 36
 a48:	90 e0       	ldi	r25, 0x00	; 0
 a4a:	fc 01       	movw	r30, r24
 a4c:	10 82       	st	Z, r1
 a4e:	85 e2       	ldi	r24, 0x25	; 37
 a50:	90 e0       	ldi	r25, 0x00	; 0
 a52:	2f ef       	ldi	r18, 0xFF	; 255
 a54:	fc 01       	movw	r30, r24
 a56:	20 83       	st	Z, r18
			DDRC = 0x00; PORTC = 0xff;
 a58:	87 e2       	ldi	r24, 0x27	; 39
 a5a:	90 e0       	ldi	r25, 0x00	; 0
 a5c:	fc 01       	movw	r30, r24
 a5e:	10 82       	st	Z, r1
 a60:	88 e2       	ldi	r24, 0x28	; 40
 a62:	90 e0       	ldi	r25, 0x00	; 0
 a64:	2f ef       	ldi	r18, 0xFF	; 255
 a66:	fc 01       	movw	r30, r24
 a68:	20 83       	st	Z, r18
			DDRD = 0xff; PORTD = 0x00;
 a6a:	8a e2       	ldi	r24, 0x2A	; 42
 a6c:	90 e0       	ldi	r25, 0x00	; 0
 a6e:	2f ef       	ldi	r18, 0xFF	; 255
 a70:	fc 01       	movw	r30, r24
 a72:	20 83       	st	Z, r18
 a74:	8b e2       	ldi	r24, 0x2B	; 43
 a76:	90 e0       	ldi	r25, 0x00	; 0
 a78:	fc 01       	movw	r30, r24
 a7a:	10 82       	st	Z, r1
			tk = 50;
 a7c:	82 e3       	ldi	r24, 0x32	; 50
 a7e:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <tk.1774>
			initUSART(0);
 a82:	80 e0       	ldi	r24, 0x00	; 0
 a84:	36 df       	rcall	.-404    	; 0x8f2 <initUSART>
			state = tasks_send;
 a86:	81 e0       	ldi	r24, 0x01	; 1
 a88:	90 e0       	ldi	r25, 0x00	; 0
 a8a:	9b 83       	std	Y+3, r25	; 0x03
 a8c:	8a 83       	std	Y+2, r24	; 0x02
			break;
 a8e:	12 c0       	rjmp	.+36     	; 0xab4 <tasks_task+0xa6>
		case tasks_send:
			if(tk == 0)
 a90:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <tk.1774>
 a94:	88 23       	and	r24, r24
 a96:	29 f4       	brne	.+10     	; 0xaa2 <tasks_task+0x94>
				state = tasks_sleep;
 a98:	82 e0       	ldi	r24, 0x02	; 2
 a9a:	90 e0       	ldi	r25, 0x00	; 0
 a9c:	9b 83       	std	Y+3, r25	; 0x03
 a9e:	8a 83       	std	Y+2, r24	; 0x02
			else
				state = tasks_send;
			break;
 aa0:	09 c0       	rjmp	.+18     	; 0xab4 <tasks_task+0xa6>
			break;
		case tasks_send:
			if(tk == 0)
				state = tasks_sleep;
			else
				state = tasks_send;
 aa2:	81 e0       	ldi	r24, 0x01	; 1
 aa4:	90 e0       	ldi	r25, 0x00	; 0
 aa6:	9b 83       	std	Y+3, r25	; 0x03
 aa8:	8a 83       	std	Y+2, r24	; 0x02
			break;
 aaa:	04 c0       	rjmp	.+8      	; 0xab4 <tasks_task+0xa6>
		case tasks_sleep:
			break;
		default:
			state = tasks_start;
 aac:	1b 82       	std	Y+3, r1	; 0x03
 aae:	1a 82       	std	Y+2, r1	; 0x02
			break;
 ab0:	01 c0       	rjmp	.+2      	; 0xab4 <tasks_task+0xa6>
				state = tasks_sleep;
			else
				state = tasks_send;
			break;
		case tasks_sleep:
			break;
 ab2:	00 00       	nop
		default:
			state = tasks_start;
			break;
	}
	switch(state)
 ab4:	8a 81       	ldd	r24, Y+2	; 0x02
 ab6:	9b 81       	ldd	r25, Y+3	; 0x03
 ab8:	81 30       	cpi	r24, 0x01	; 1
 aba:	91 05       	cpc	r25, r1
 abc:	51 f0       	breq	.+20     	; 0xad2 <tasks_task+0xc4>
 abe:	82 30       	cpi	r24, 0x02	; 2
 ac0:	91 05       	cpc	r25, r1
 ac2:	69 f1       	breq	.+90     	; 0xb1e <tasks_task+0x110>
 ac4:	89 2b       	or	r24, r25
 ac6:	41 f5       	brne	.+80     	; 0xb18 <tasks_task+0x10a>
		case tasks_start:			// initializes all ports
			/*DDRA = 0x00; PORTA = 0xff;
			DDRB = 0xff; PORTB = 0x00;
			DDRC = 0x00; PORTC = 0xff;
			DDRD = 0xff; PORTD = 0x00;*/
			state = tasks_send;
 ac8:	81 e0       	ldi	r24, 0x01	; 1
 aca:	90 e0       	ldi	r25, 0x00	; 0
 acc:	9b 83       	std	Y+3, r25	; 0x03
 ace:	8a 83       	std	Y+2, r24	; 0x02
			break;
 ad0:	29 c0       	rjmp	.+82     	; 0xb24 <tasks_task+0x116>
		case tasks_send:
			//PORTB = presSens | buttons | direction1 | (speed << 2); // temporary
			//PORTB = magTL;
			/*if(ADC == 0 && presSens == 0 && buttons == 0)
				tk--;*/
			if(USART_IsSendReady(0))
 ad2:	80 e0       	ldi	r24, 0x00	; 0
 ad4:	53 df       	rcall	.-346    	; 0x97c <USART_IsSendReady>
 ad6:	88 23       	and	r24, r24
 ad8:	21 f1       	breq	.+72     	; 0xb22 <tasks_task+0x114>
			{
				unsigned char send = (buttons << 2) | (presSens >> 2) | ((direction & 0x0f) << 4);
 ada:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <buttons>
 ade:	88 2f       	mov	r24, r24
 ae0:	90 e0       	ldi	r25, 0x00	; 0
 ae2:	88 0f       	add	r24, r24
 ae4:	99 1f       	adc	r25, r25
 ae6:	88 0f       	add	r24, r24
 ae8:	99 1f       	adc	r25, r25
 aea:	98 2f       	mov	r25, r24
 aec:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 af0:	86 95       	lsr	r24
 af2:	86 95       	lsr	r24
 af4:	29 2f       	mov	r18, r25
 af6:	28 2b       	or	r18, r24
 af8:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <direction>
 afc:	88 2f       	mov	r24, r24
 afe:	90 e0       	ldi	r25, 0x00	; 0
 b00:	82 95       	swap	r24
 b02:	92 95       	swap	r25
 b04:	90 7f       	andi	r25, 0xF0	; 240
 b06:	98 27       	eor	r25, r24
 b08:	80 7f       	andi	r24, 0xF0	; 240
 b0a:	98 27       	eor	r25, r24
 b0c:	82 2b       	or	r24, r18
 b0e:	89 83       	std	Y+1, r24	; 0x01
				USART_Send(send,0);
 b10:	60 e0       	ldi	r22, 0x00	; 0
 b12:	89 81       	ldd	r24, Y+1	; 0x01
 b14:	4b df       	rcall	.-362    	; 0x9ac <USART_Send>
			}
			break;
 b16:	05 c0       	rjmp	.+10     	; 0xb22 <tasks_task+0x114>
		case tasks_sleep:
			//sleep();
			break;
		default:
			state = tasks_start;
 b18:	1b 82       	std	Y+3, r1	; 0x03
 b1a:	1a 82       	std	Y+2, r1	; 0x02
			break;
 b1c:	03 c0       	rjmp	.+6      	; 0xb24 <tasks_task+0x116>
				USART_Send(send,0);
			}
			break;
		case tasks_sleep:
			//sleep();
			break;
 b1e:	00 00       	nop
 b20:	01 c0       	rjmp	.+2      	; 0xb24 <tasks_task+0x116>
			if(USART_IsSendReady(0))
			{
				unsigned char send = (buttons << 2) | (presSens >> 2) | ((direction & 0x0f) << 4);
				USART_Send(send,0);
			}
			break;
 b22:	00 00       	nop
		default:
			state = tasks_start;
			break;
	}
	
	return state;
 b24:	8a 81       	ldd	r24, Y+2	; 0x02
 b26:	9b 81       	ldd	r25, Y+3	; 0x03
}
 b28:	0f 90       	pop	r0
 b2a:	0f 90       	pop	r0
 b2c:	0f 90       	pop	r0
 b2e:	df 91       	pop	r29
 b30:	cf 91       	pop	r28
 b32:	08 95       	ret

00000b34 <main>:


int main(void)
{
 b34:	cf 93       	push	r28
 b36:	df 93       	push	r29
 b38:	cd b7       	in	r28, 0x3d	; 61
 b3a:	de b7       	in	r29, 0x3e	; 62
 b3c:	cf 56       	subi	r28, 0x6F	; 111
 b3e:	d1 09       	sbc	r29, r1
 b40:	0f b6       	in	r0, 0x3f	; 63
 b42:	f8 94       	cli
 b44:	de bf       	out	0x3e, r29	; 62
 b46:	0f be       	out	0x3f, r0	; 63
 b48:	cd bf       	out	0x3d, r28	; 61
    /* Replace with your application code */
	unsigned char contTime = 400;
 b4a:	80 e9       	ldi	r24, 0x90	; 144
 b4c:	89 83       	std	Y+1, r24	; 0x01
	task  Pressure;
	task Poll1;
	task Poll2;
	task Mag;
	
	controller.state = tasks_start;
 b4e:	1a 82       	std	Y+2, r1	; 0x02
	controller.elapsedTime = contTime;
 b50:	89 81       	ldd	r24, Y+1	; 0x01
 b52:	88 2f       	mov	r24, r24
 b54:	90 e0       	ldi	r25, 0x00	; 0
 b56:	a0 e0       	ldi	r26, 0x00	; 0
 b58:	b0 e0       	ldi	r27, 0x00	; 0
 b5a:	8f 83       	std	Y+7, r24	; 0x07
 b5c:	98 87       	std	Y+8, r25	; 0x08
 b5e:	a9 87       	std	Y+9, r26	; 0x09
 b60:	ba 87       	std	Y+10, r27	; 0x0a
	controller.period = contTime;
 b62:	89 81       	ldd	r24, Y+1	; 0x01
 b64:	88 2f       	mov	r24, r24
 b66:	90 e0       	ldi	r25, 0x00	; 0
 b68:	a0 e0       	ldi	r26, 0x00	; 0
 b6a:	b0 e0       	ldi	r27, 0x00	; 0
 b6c:	8b 83       	std	Y+3, r24	; 0x03
 b6e:	9c 83       	std	Y+4, r25	; 0x04
 b70:	ad 83       	std	Y+5, r26	; 0x05
 b72:	be 83       	std	Y+6, r27	; 0x06
	controller.TickFct = &tasks_task;
 b74:	87 e0       	ldi	r24, 0x07	; 7
 b76:	95 e0       	ldi	r25, 0x05	; 5
 b78:	9c 87       	std	Y+12, r25	; 0x0c
 b7a:	8b 87       	std	Y+11, r24	; 0x0b
	
	Pressure.state = presStart;
 b7c:	1d 86       	std	Y+13, r1	; 0x0d
	Pressure.TickFct = &PRESSENSE_task;
 b7e:	83 ed       	ldi	r24, 0xD3	; 211
 b80:	90 e0       	ldi	r25, 0x00	; 0
 b82:	9f 8b       	std	Y+23, r25	; 0x17
 b84:	8e 8b       	std	Y+22, r24	; 0x16
	Pressure.elapsedTime = contTime/2;
 b86:	89 81       	ldd	r24, Y+1	; 0x01
 b88:	86 95       	lsr	r24
 b8a:	88 2f       	mov	r24, r24
 b8c:	90 e0       	ldi	r25, 0x00	; 0
 b8e:	a0 e0       	ldi	r26, 0x00	; 0
 b90:	b0 e0       	ldi	r27, 0x00	; 0
 b92:	8a 8b       	std	Y+18, r24	; 0x12
 b94:	9b 8b       	std	Y+19, r25	; 0x13
 b96:	ac 8b       	std	Y+20, r26	; 0x14
 b98:	bd 8b       	std	Y+21, r27	; 0x15
	Pressure.period = contTime/2;
 b9a:	89 81       	ldd	r24, Y+1	; 0x01
 b9c:	86 95       	lsr	r24
 b9e:	88 2f       	mov	r24, r24
 ba0:	90 e0       	ldi	r25, 0x00	; 0
 ba2:	a0 e0       	ldi	r26, 0x00	; 0
 ba4:	b0 e0       	ldi	r27, 0x00	; 0
 ba6:	8e 87       	std	Y+14, r24	; 0x0e
 ba8:	9f 87       	std	Y+15, r25	; 0x0f
 baa:	a8 8b       	std	Y+16, r26	; 0x10
 bac:	b9 8b       	std	Y+17, r27	; 0x11
	tasksPeriodGCD = contTime;
 bae:	89 81       	ldd	r24, Y+1	; 0x01
 bb0:	88 2f       	mov	r24, r24
 bb2:	90 e0       	ldi	r25, 0x00	; 0
 bb4:	a0 e0       	ldi	r26, 0x00	; 0
 bb6:	b0 e0       	ldi	r27, 0x00	; 0
 bb8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 bbc:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 bc0:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 bc4:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
	
	Poll1.state = B1_start;
 bc8:	18 8e       	std	Y+24, r1	; 0x18
	Poll1.elapsedTime = contTime/2;
 bca:	89 81       	ldd	r24, Y+1	; 0x01
 bcc:	86 95       	lsr	r24
 bce:	88 2f       	mov	r24, r24
 bd0:	90 e0       	ldi	r25, 0x00	; 0
 bd2:	a0 e0       	ldi	r26, 0x00	; 0
 bd4:	b0 e0       	ldi	r27, 0x00	; 0
 bd6:	8d 8f       	std	Y+29, r24	; 0x1d
 bd8:	9e 8f       	std	Y+30, r25	; 0x1e
 bda:	af 8f       	std	Y+31, r26	; 0x1f
 bdc:	b8 a3       	std	Y+32, r27	; 0x20
	Poll1.period = contTime/2;
 bde:	89 81       	ldd	r24, Y+1	; 0x01
 be0:	86 95       	lsr	r24
 be2:	88 2f       	mov	r24, r24
 be4:	90 e0       	ldi	r25, 0x00	; 0
 be6:	a0 e0       	ldi	r26, 0x00	; 0
 be8:	b0 e0       	ldi	r27, 0x00	; 0
 bea:	89 8f       	std	Y+25, r24	; 0x19
 bec:	9a 8f       	std	Y+26, r25	; 0x1a
 bee:	ab 8f       	std	Y+27, r26	; 0x1b
 bf0:	bc 8f       	std	Y+28, r27	; 0x1c
	Poll1.TickFct = &B1_task;
 bf2:	89 eb       	ldi	r24, 0xB9	; 185
 bf4:	93 e0       	ldi	r25, 0x03	; 3
 bf6:	9a a3       	std	Y+34, r25	; 0x22
 bf8:	89 a3       	std	Y+33, r24	; 0x21
	
	Poll2.state = B2_start;
 bfa:	1b a2       	std	Y+35, r1	; 0x23
	Poll2.elapsedTime = contTime/2;
 bfc:	89 81       	ldd	r24, Y+1	; 0x01
 bfe:	86 95       	lsr	r24
 c00:	88 2f       	mov	r24, r24
 c02:	90 e0       	ldi	r25, 0x00	; 0
 c04:	a0 e0       	ldi	r26, 0x00	; 0
 c06:	b0 e0       	ldi	r27, 0x00	; 0
 c08:	88 a7       	std	Y+40, r24	; 0x28
 c0a:	99 a7       	std	Y+41, r25	; 0x29
 c0c:	aa a7       	std	Y+42, r26	; 0x2a
 c0e:	bb a7       	std	Y+43, r27	; 0x2b
	Poll2.period = contTime/2;
 c10:	89 81       	ldd	r24, Y+1	; 0x01
 c12:	86 95       	lsr	r24
 c14:	88 2f       	mov	r24, r24
 c16:	90 e0       	ldi	r25, 0x00	; 0
 c18:	a0 e0       	ldi	r26, 0x00	; 0
 c1a:	b0 e0       	ldi	r27, 0x00	; 0
 c1c:	8c a3       	std	Y+36, r24	; 0x24
 c1e:	9d a3       	std	Y+37, r25	; 0x25
 c20:	ae a3       	std	Y+38, r26	; 0x26
 c22:	bf a3       	std	Y+39, r27	; 0x27
	Poll2.TickFct = &B2_task;
 c24:	89 e1       	ldi	r24, 0x19	; 25
 c26:	94 e0       	ldi	r25, 0x04	; 4
 c28:	9d a7       	std	Y+45, r25	; 0x2d
 c2a:	8c a7       	std	Y+44, r24	; 0x2c
	
	Mag.state = magStart;
 c2c:	1e a6       	std	Y+46, r1	; 0x2e
	Mag.elapsedTime = contTime/2;
 c2e:	89 81       	ldd	r24, Y+1	; 0x01
 c30:	86 95       	lsr	r24
 c32:	88 2f       	mov	r24, r24
 c34:	90 e0       	ldi	r25, 0x00	; 0
 c36:	a0 e0       	ldi	r26, 0x00	; 0
 c38:	b0 e0       	ldi	r27, 0x00	; 0
 c3a:	8b ab       	std	Y+51, r24	; 0x33
 c3c:	9c ab       	std	Y+52, r25	; 0x34
 c3e:	ad ab       	std	Y+53, r26	; 0x35
 c40:	be ab       	std	Y+54, r27	; 0x36
	Mag.period = contTime/2;
 c42:	89 81       	ldd	r24, Y+1	; 0x01
 c44:	86 95       	lsr	r24
 c46:	88 2f       	mov	r24, r24
 c48:	90 e0       	ldi	r25, 0x00	; 0
 c4a:	a0 e0       	ldi	r26, 0x00	; 0
 c4c:	b0 e0       	ldi	r27, 0x00	; 0
 c4e:	8f a7       	std	Y+47, r24	; 0x2f
 c50:	98 ab       	std	Y+48, r25	; 0x30
 c52:	a9 ab       	std	Y+49, r26	; 0x31
 c54:	ba ab       	std	Y+50, r27	; 0x32
	Mag.TickFct = &magSense_task;
 c56:	88 e1       	ldi	r24, 0x18	; 24
 c58:	91 e0       	ldi	r25, 0x01	; 1
 c5a:	98 af       	std	Y+56, r25	; 0x38
 c5c:	8f ab       	std	Y+55, r24	; 0x37
	/*DDRA = 0x00; PORTA = 0xff;
	DDRB = 0xff; PORTB = 0x00;
	DDRC = 0xff; PORTC = 0x00;
	DDRD = 0xff; PORTD = 0x00;
	*/
	TimerSet(contTime/2);
 c5e:	89 81       	ldd	r24, Y+1	; 0x01
 c60:	86 95       	lsr	r24
 c62:	88 2f       	mov	r24, r24
 c64:	90 e0       	ldi	r25, 0x00	; 0
 c66:	a0 e0       	ldi	r26, 0x00	; 0
 c68:	b0 e0       	ldi	r27, 0x00	; 0
 c6a:	bc 01       	movw	r22, r24
 c6c:	cd 01       	movw	r24, r26
 c6e:	1c dd       	rcall	.-1480   	; 0x6a8 <TimerSet>
	TimerOn();
 c70:	49 dd       	rcall	.-1390   	; 0x704 <TimerOn>
 c72:	8b e0       	ldi	r24, 0x0B	; 11
	
	
	task temp[] = {controller, Pressure, Poll1, Poll2, Mag};
 c74:	fe 01       	movw	r30, r28
 c76:	32 96       	adiw	r30, 0x02	; 2
 c78:	de 01       	movw	r26, r28
 c7a:	d9 96       	adiw	r26, 0x39	; 57
 c7c:	01 90       	ld	r0, Z+
 c7e:	0d 92       	st	X+, r0
 c80:	8a 95       	dec	r24
 c82:	e1 f7       	brne	.-8      	; 0xc7c <main+0x148>
 c84:	ce 01       	movw	r24, r28
 c86:	8c 5b       	subi	r24, 0xBC	; 188
 c88:	9f 4f       	sbci	r25, 0xFF	; 255
 c8a:	2b e0       	ldi	r18, 0x0B	; 11
 c8c:	fe 01       	movw	r30, r28
 c8e:	3d 96       	adiw	r30, 0x0d	; 13
 c90:	dc 01       	movw	r26, r24
 c92:	01 90       	ld	r0, Z+
 c94:	0d 92       	st	X+, r0
 c96:	2a 95       	dec	r18
 c98:	e1 f7       	brne	.-8      	; 0xc92 <main+0x15e>
 c9a:	ce 01       	movw	r24, r28
 c9c:	81 5b       	subi	r24, 0xB1	; 177
 c9e:	9f 4f       	sbci	r25, 0xFF	; 255
 ca0:	2b e0       	ldi	r18, 0x0B	; 11
 ca2:	fe 01       	movw	r30, r28
 ca4:	78 96       	adiw	r30, 0x18	; 24
 ca6:	dc 01       	movw	r26, r24
 ca8:	01 90       	ld	r0, Z+
 caa:	0d 92       	st	X+, r0
 cac:	2a 95       	dec	r18
 cae:	e1 f7       	brne	.-8      	; 0xca8 <main+0x174>
 cb0:	ce 01       	movw	r24, r28
 cb2:	86 5a       	subi	r24, 0xA6	; 166
 cb4:	9f 4f       	sbci	r25, 0xFF	; 255
 cb6:	2b e0       	ldi	r18, 0x0B	; 11
 cb8:	fe 01       	movw	r30, r28
 cba:	b3 96       	adiw	r30, 0x23	; 35
 cbc:	dc 01       	movw	r26, r24
 cbe:	01 90       	ld	r0, Z+
 cc0:	0d 92       	st	X+, r0
 cc2:	2a 95       	dec	r18
 cc4:	e1 f7       	brne	.-8      	; 0xcbe <main+0x18a>
 cc6:	ce 01       	movw	r24, r28
 cc8:	8b 59       	subi	r24, 0x9B	; 155
 cca:	9f 4f       	sbci	r25, 0xFF	; 255
 ccc:	2b e0       	ldi	r18, 0x0B	; 11
 cce:	fe 01       	movw	r30, r28
 cd0:	be 96       	adiw	r30, 0x2e	; 46
 cd2:	dc 01       	movw	r26, r24
 cd4:	01 90       	ld	r0, Z+
 cd6:	0d 92       	st	X+, r0
 cd8:	2a 95       	dec	r18
 cda:	e1 f7       	brne	.-8      	; 0xcd4 <main+0x1a0>
 cdc:	ce 01       	movw	r24, r28
	tasks = &temp;
 cde:	c9 96       	adiw	r24, 0x39	; 57
 ce0:	90 93 16 01 	sts	0x0116, r25	; 0x800116 <tasks+0x1>
 ce4:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <tasks>
 ce8:	85 e0       	ldi	r24, 0x05	; 5
	tasksNum = 5;
 cea:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <tasksNum>
 cee:	ff cf       	rjmp	.-2      	; 0xcee <main+0x1ba>

00000cf0 <_exit>:
		//ADC_ON();
		//PORTB = ADC_SEND();
		//ADC_SELECT(selector);
		//selector++;
		//PORTB = presSens;
    }
 cf0:	f8 94       	cli

00000cf2 <__stop_program>:
 cf2:	ff cf       	rjmp	.-2      	; 0xcf2 <__stop_program>
